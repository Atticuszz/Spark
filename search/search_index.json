{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HomeHi there, I'm Atticus Zhou \ud83d\udc4b","text":"<ul> <li>\ud83d\udd2d I\u2019m currently working on computer vision like deep learning and 3D-reconstruction</li> <li>\ud83c\udf31 I\u2019m currently learning Advanced Python, FastAPI, Pytorch, CUDA, TypeScript, C++</li> <li>\ud83d\udcac Ask me about Python, FastAPI, Pytorch</li> <li>\ud83d\udceb How to reach me: zhouge1831@gmail.com</li> <li>\u26a1 Fun fact: I'm also an analog photography enthusiast and a sports aficionado</li> </ul> Languages and Tools:"},{"location":"Daily/Tasks/","title":"Tasks","text":""},{"location":"Daily/Tasks/#paper","title":"paper","text":"<ul> <li> illustration of <code>GsplatLoc</code></li> <li> data table of Evaluation,conclusion and Abstract,title </li> <li> forms of submission  to IET<ul> <li> author info of Mrs. Wu</li> </ul> </li> <li> template check </li> </ul>"},{"location":"Daily/writing/2024-9/","title":"2024-9","text":""},{"location":"Daily/writing/2024-9/#9-13","title":"9-13","text":"<ul> <li>brace yourself up\u270a, \\(99\\) days\u231b left for final war\ud83d\udd25</li> </ul>"},{"location":"Daily/writing/2024-9/#snippets","title":"Snippets","text":"<ul> <li>we can draw on experience of the great man.</li> <li>her nasty behavior have earned of contempt of many web users.</li> </ul> <p>I think the rest days my den den habits is not good cause I sleep late because of just wanna surf the internet about Trump's pose or just do notSatisfy with the current day works just I think it's because of your greedy, it interrupt your normal lifestyle,And also I think what kind of people can be an adult? I think it's maybe hard for yours. Also the contemporary young people, the maybe hard to grown up cause the lots of campus or some bad things, but it's bad for the grow up. And I think today, today morning I just writing some essays with the newest charge GBT, I think it's good, but it' took almost the whole morning to complete the related works part and the the norm. I didn't remember what did, but I think I got to the library almost one a m so it almost four hours To complete two tasks of mathematics, one of them is calculus and the other is linear algebra and you find you are extremely fatigue. WHYfiguring out the problems of linear algebra, and you go to dinner about aboutabout five and you let have a nap for almost one hour during the nap I try to learn something about git And this, this night, this night, are you almost doing nothing? Cause I think you are absolutely week. Lack of energy just played to build a more beautiful blocks of yourself. Try to switch different logos of your site and now you're writing down to record at today's try the first time to write about your thoughts by your mobile phone. I think it's time to go now</p>"},{"location":"Daily/writing/2024-9/#9-14","title":"9-14","text":""},{"location":"Daily/writing/2024-9/#morning","title":"Morning","text":"<p>I do a plan of what should I do as I get up.I think there's raise about several things, about first thing is is get on your clothes and next thing is to wash your face and brush your teeth, and then eating your breakfast and for one is where are your shoes? There is all those this is so simple habits you have to follow, cause we have to separate our the behavior about get up from the bed with playing with phone. So I think it is important for us to manage our behaviors and treat, treat, treat, treat it as a habit cause I think people always the things randomly, we have to learn how to control it and here are some principles about how can we control our habits. Just make the stops that is all for us to see, so we can see the marks that we placed before so we can do it on our plan and that's easy. So we have to have a plan and figure out how cool could we go into a but situation with full of energy, the period of starting up is vital for us to a day and then they are my strategies that's vital. And also it seemed to the stuffs we have done before we get bad. That's how I think about the tiny behaviors or the marks which place to be to affect our behaviors in the future at at some moment, that's my strategy</p> <p>And another behavior that I would try as to get up and then before we go to work the have the lots of works we have to walk, walk, walk in our campaign. Just walk, walk around to see different kinds of things, different kinds of treescars and people and the sky, the light and sunlight of the sun. I just walk around and see your environment, your surrounding stuffs because it's diversity. We're activate your mind, activate your body instead of just looking at your homework, the books, a desks, that's it. It's hard to activate yourself. I think there is some stipulation that were inform your body to awake from the sleep, not something to do before we get into the bar, the works, work situation, work state my trial</p>"},{"location":"Daily/writing/2024-9/#morning_1","title":"Morning","text":"<p>I think this morning we have done three tasks. The first one is to revise your your errors and then to look through the answers and the questions to understand where To familiar with those method you're not understand</p>"},{"location":"Daily/writing/2024-9/#noon","title":"Noon","text":"<p>Lunch time at 11:00 pm,sparked an idea about <code>Picgo</code> plugin of <code>Obsidian</code> that we can manage all images while being pasted to automatically upload to github repository which as <code>picgo</code> server.</p> <p>And finished the intricate configuration of <code>Obsidian Linter</code> which can help us  format notes perfectly,and it actually intimidated me for reading it's instructions.</p> <p>finally attachment paths are valid for <code>makedocs</code> to recognize,it's weird.</p>"},{"location":"Daily/writing/2024-9/#afternoon","title":"Afternoon","text":"<p>Firstly I went to the playground for training spreading a fifty minutes, two hundred meter and one hundred and fifty meter. Then we find our state a and now we have the warm up for most ten minutes just for activate your muscles, your your hips and your legs. And you find your ability of symmetry of movement is perfectly good cause I think it because you worked for for warming up your mind and your body this morning. So you before you have the basics exercise, you have the lowest exercise between before the main exercise and as you went to the gym you just do Two groups, for every moments are all actions to activate your muscles from your your arms to your legs and your bully. After that you have the dumplings but actually you find as you a bit of fatigue. So in the period of low lower energy you just wanna play with something, Just figure out your ideas about how to manage your notes more convenient or feasible. After that you realize that you realize you have to stop it for memorize today's words and you finished the memorizing words before nine no, not nine, seven p m and then revise your operating system, homework regards to management allocation, memory allocation of main memory, and then you have to go to bed</p>"},{"location":"Daily/writing/2024-9/#snippets_1","title":"Snippets","text":"<ul> <li>lash out the wrong of society</li> <li>more haste, less speed</li> <li>boil down to, put down to</li> </ul>"},{"location":"Daily/writing/2024-9/#evening","title":"evening","text":"<ul> <li>corrected <code>memory allocation</code> homework </li> <li>shulfed assets and <code>.Obsidian</code> to site build folder \ud83d\udcc1</li> <li>updated links of images of notes</li> </ul>"},{"location":"Daily/writing/2024-9/#9-15","title":"9-15","text":"<ul> <li>\\(97\\) day left \ud83e\udd5d</li> </ul>"},{"location":"Daily/writing/2024-9/#morning_2","title":"morning","text":"<ul> <li>read first paragraph of The Logic of Science\ud83d\udcd6 on subway \ud83d\ude87 </li> </ul>"},{"location":"Features/Admonitions/","title":"Admonitions","text":"<p>Note</p> <p>This is a note callout.</p> <p>Abstract</p> <p>This is an abstract or summary callout.</p> <p>Information</p> <p>This is an info callout.</p> <p>Helpful Tip</p> <p>This is a tip or hint callout.</p> <p>Task Completed</p> <p>This is a success callout.</p> <p>Frequently Asked Question</p> <p>This is a question or FAQ callout.</p> <p>Be Careful!</p> <p>This is a warning callout.</p> <p>Error Occurred</p> <p>This is a failure or error callout.</p> <p>Danger Zone</p> <p>This is a danger callout.</p> <p>Known Issue</p> <p>This is a bug callout.</p> <p>Code Example</p> <p>This is an example callout.</p> <p>Famous Words</p> <p>This is a quote callout.</p>"},{"location":"Features/Diagrams/","title":"Diagrams","text":"<p>Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js, a very popular and flexible solution for drawing diagrams.</p>"},{"location":"Features/Diagrams/#configuration","title":"Configuration","text":"<p>This configuration enables native support for Mermaid.js diagrams. Material for MkDocs will automatically initialize the JavaScript runtime when a page includes a <code>mermaid</code> code block:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <p>No further configuration is necessary. Advantages over a custom integration:</p> <ul> <li> Works with instant loading without any additional effort</li> <li> Diagrams automatically use fonts and colors defined in <code>mkdocs.yml</code><sup>1</sup></li> <li> Fonts and colors can be customized with additional style sheets</li> <li> Support for both, light and dark color schemes \u2013 try it on this page!</li> </ul>"},{"location":"Features/Diagrams/#usage","title":"Usage","text":""},{"location":"Features/Diagrams/#using-flowcharts","title":"Using Flowcharts","text":"<p>Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps:</p> Flow chart<pre><code>``` mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"Features/Diagrams/#using-sequence-diagrams","title":"Using Sequence Diagrams","text":"<p>Sequence diagrams describe a specific scenario as sequential interactions between multiple objects or actors, including the messages that are exchanged between those actors:</p> Sequence diagram<pre><code>``` mermaid\nsequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"Features/Diagrams/#using-state-diagrams","title":"Using State Diagrams","text":"<p>State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states:</p> State diagram<pre><code>``` mermaid\nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"Features/Diagrams/#using-class-diagrams","title":"Using Class Diagrams","text":"<p>Class diagrams are central to object oriented programming, describing the structure of a system by modelling entities as classes and relationships between them:</p> Class diagram<pre><code>``` mermaid\nclassDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }\n```\n</code></pre> <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"Features/Diagrams/#using-entity-relationship-diagrams","title":"Using Entity-relationship Diagrams","text":"<p>An entity-relationship diagram is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge:</p> Entity-relationship diagram<pre><code>``` mermaid\nerDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n```\n</code></pre> <pre><code>erDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</code></pre>"},{"location":"Features/Diagrams/#other-diagram-types","title":"Other Diagram Types","text":"<p>Besides the diagram types listed above, Mermaid.js provides support for pie charts, gantt charts, user journeys, git graphs and requirement diagrams, all of which are not officially supported by Material for MkDocs. Those diagrams should still work as advertised by Mermaid.js, but we don't consider them a good choice, mostly as they don't work well on mobile.</p> <p>Backlinks:</p> <ol> <li> <p>While all Mermaid.js features should work out-of-the-box, Material for MkDocs will currently only adjust the fonts and colors for flowcharts, sequence diagrams, class diagrams, state diagrams and entity relationship diagrams. See the section on other diagrams for more information why this is currently not implemented for all diagrams.\u00a0\u21a9</p> </li> </ol>"},{"location":"Features/Draw/","title":"Draw","text":""},{"location":"Features/Draw/#drawio","title":"Draw.io","text":"<p>logic diagrams style</p>"},{"location":"Features/Draw/#excalidraw","title":"Excalidraw","text":"<p>hand writing style </p>"},{"location":"Features/Icons%2C%20Emojis/","title":"Icons, Emojis","text":""},{"location":"Features/Icons%2C%20Emojis/#emojis","title":"Emojis","text":"<p>use obsidian plugin to autocomplete GitHub - KraXen72/obsidian-emoji-autocomplete: Emoji Shortcodes Autocomplete for Obsidian</p> <ul> <li>\ud83d\ude00</li> <li>\ud83d\ude22</li> <li>\ud83d\udd2b</li> <li>\ud83e\udd70</li> <li>\ud83d\ude3b</li> </ul>"},{"location":"Features/Icons%2C%20Emojis/#icons","title":"Icons","text":"<p>search in Icons, Emojis - Material for MkDocs</p>"},{"location":"Features/Image/","title":"Image","text":"<p>Images - Material for MkDocs</p> <p></p> <p></p>"},{"location":"Features/LaTeX%20Math%20Support/","title":"LaTeX Math Support","text":"<p>LaTeX math is supported using MathJax.</p> <p>Inline math looks like \\(f(x) = x^2\\). The input for this is <code>$f(x) = x^2$</code>. Use <code>$\u2026$</code>.</p> <p>For a block of math, use <code>$$\u2026$$</code> on separate lines</p> <pre><code>$$\nF(x) = \\int^a_b \\frac{1}{2}x^4\n$$\n</code></pre> <p>gives</p> \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\] \\[ D(\\mathbf{p}) = \\sum_{n \\leq N} d_n \\cdot \\alpha_n \\cdot T_n, \\quad \\text{where } T_n = \\prod_{m&lt;n} (1 - \\alpha_m) \\]"},{"location":"Features/Table/","title":"Table","text":"Methods Avg. R0 R1 R2 Of0 Of1 Of2 Of3 Of4 DROID-SLAM 0.38 0.53 0.38 0.45 0.35 0.24 0.36 0.33 0.43 Vox-Fusion 3.09 1.37 4.70 1.47 8.48 2.04 2.58 1.11 2.94 NICE-SLAM 1.06 0.97 1.31 1.07 0.88 1.00 1.06 1.10 1.13 ESLAM 0.63 0.71 0.70 0.52 0.57 0.55 0.58 0.72 0.63 Point-SLAM 0.52 0.61 0.41 0.37 0.38 0.48 0.54 0.69 0.72 SplaTAM 0.36 0.31 0.40 0.29 0.47 0.27 0.29 0.32 0.55"},{"location":"Features/Text%20Formatting/","title":"Text Formatting","text":""},{"location":"Features/Text%20Formatting/#list","title":"List","text":"<p>Lists - Material for MkDocs</p>"},{"location":"Features/Text%20Formatting/#attr_list","title":"attr_list","text":"<ul> <li>attr_list</li> <li>attr_list</li> <li>attr_list</li> </ul>"},{"location":"Features/Text%20Formatting/#pymdownxtasklist","title":"pymdownx.tasklist","text":"<ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"Features/Text%20Formatting/#def_list","title":"def_list","text":""},{"location":"Features/Text%20Formatting/#list-unordered","title":"List, Unordered","text":"<ul> <li> <p>Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur   accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh   lacinia sed. Aenean in finibus diam.</p> <ul> <li>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.</li> <li>Name vulputate tincidunt fringilla.</li> <li>Nullam dignissim ultrices urna non auctor.</li> </ul> </li> </ul>"},{"location":"Features/Text%20Formatting/#using-ordered-lists","title":"Using Ordered Lists","text":"<ol> <li> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis     sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis     nulla. Vivamus a pharetra leo.</p> <ol> <li> <p>Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet     quam enim, eu volutpat urna rutrum a. Name vehicula nunc mauris, a     ultricies libero efficitur sed.</p> </li> <li> <p>Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet     rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.</p> <ol> <li>Mauris dictum mi lacus</li> <li>Ut sit amet placerat ante</li> <li>Suspendisse ac eros arcu</li> </ol> </li> </ol> </li> </ol>"},{"location":"Features/Text%20Formatting/#highlight-and-strikethrough","title":"Highlight and Strikethrough","text":"<p>Formatting - Material for MkDocs</p> <ul> <li>This was marked (highlight)</li> <li> <p>This was deleted (strikethrough)</p> </li> <li> <p>[?] question</p> </li> <li>[!] important</li> <li>[*] star</li> <li>[\"] quote</li> <li>[l] location</li> <li>[b] bookmark</li> <li>[i] information</li> <li>[S] savings</li> <li>[I] idea</li> <li>[p] pros</li> <li>[c] cons</li> <li>[f] fire</li> <li>[k] key</li> <li>[w] win</li> <li>[u] up</li> <li>[d] down</li> <li>[D] draft pull request</li> <li>[P] open pull request</li> <li>[M] merged pull request</li> </ul>"},{"location":"Features/code/","title":"Code","text":""},{"location":"Features/code/#block","title":"Block","text":"<pre><code>from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n</code></pre>"},{"location":"Features/code/#inline","title":"Inline","text":"<p>The <code>range()</code> function is used to generate a sequence of numbers.</p> <p>Diagrams Diagrams Draw</p> <p><code>python,shell from fastapi impart FastAPI</code></p> <ul> <li> <p>item 1</p> <ul> <li>item 2</li> <li>item 3</li> </ul> </li> <li> <p>Item 1</p> </li> <li>Item 2</li> <li>Item 3 Some text here</li> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ul> <p>Lorem ( \u2026 ) Impsum.</p> <ul> <li>item 1</li> <li>copypasted item A</li> <li>item 2</li> <li>indented item</li> <li> <p>copypasted item B</p> <p>as</p> </li> </ul>"},{"location":"Features/footntoes/","title":"Footntoes","text":"<p>Footnotes - Material for MkDocs</p> <p>Lorem ipsum<sup>1</sup> dolor sit amet, consectetur adipiscing elit.<sup>2</sup> Vivamus luctus urna sed urna ultricies ac tempor dui sagittis.<sup>3</sup> Praesent tristique magna sit amet purus gravida quis blandit turpis cursus.<sup>4</sup> Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.<sup>5</sup> Donec sollicitudin molestie malesuada.<sup>6</sup> Vivamus suscipit tortor eget felis porttitor volutpat.<sup>7</sup> Mauris blandit aliquet elit, eget tincidunt nibh pulvinar a.<sup>8</sup> Nulla porttitor accumsan tincidunt.<sup>9</sup> Proin eget tortor risus.<sup>10</sup></p> <ol> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\u21a9</p> </li> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla.\u00a0\u21a9</p> </li> <li> <p>Vivamus luctus urna sed urna ultricies ac tempor dui sagittis.\u00a0\u21a9</p> </li> <li> <p>Praesent tristique magna sit amet purus gravida quis blandit turpis cursus.\u00a0\u21a9</p> </li> <li> <p>Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.\u00a0\u21a9</p> </li> <li> <p>Donec sollicitudin molestie malesuada.\u00a0\u21a9</p> </li> <li> <p>Vivamus suscipit tortor eget felis porttitor volutpat.\u00a0\u21a9</p> </li> <li> <p>Mauris blandit aliquet elit, eget tincidunt nibh pulvinar a.\u00a0\u21a9</p> </li> <li> <p>Nulla porttitor accumsan tincidunt.\u00a0\u21a9</p> </li> <li> <p>Proin eget tortor risus, suscipit at, ultricies eget, tempor sit amet, ante.\u00a0\u21a9</p> </li> </ol>"},{"location":"Learning/CS/Language/C%2B%2B/Pointer/","title":"Pointer","text":""},{"location":"Learning/CS/Language/C%2B%2B/Pointer/#c","title":"C++ \u667a\u80fd\u6307\u9488\u7b80\u4ecb","text":"<p>\u667a\u80fd\u6307\u9488\u662f\u73b0\u4ee3 C++ \u4e2d\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u5c01\u88c5\u539f\u59cb\u6307\u9488\uff0c\u5b83\u4eec\u5e2e\u52a9\u7a0b\u5e8f\u5458\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u5e76\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168\u3002C++11 \u6807\u51c6\u5f15\u5165\u4e86\u51e0\u79cd\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u4f7f\u5f97\u8d44\u6e90\u7ba1\u7406\u66f4\u52a0\u7b80\u5355\u548c\u5b89\u5168\u3002</p>"},{"location":"Learning/CS/Language/C%2B%2B/Pointer/#_1","title":"\u667a\u80fd\u6307\u9488\u7c7b\u578b","text":"<ol> <li> <p><code>std::unique_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u63d0\u4f9b\u5bf9\u5185\u5b58\u7684\u72ec\u5360\u6240\u6709\u6743\uff0c\u5373\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a <code>std::unique_ptr</code> \u53ef\u4ee5\u62e5\u6709\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u9700\u8981\u660e\u786e\u5355\u4e00\u6240\u6709\u6743\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61\u3002</li> <li>\u4e0d\u53ef\u590d\u5236\uff1a\u53ea\u80fd\u79fb\u52a8\uff0c\u786e\u4fdd\u6240\u6709\u6743\u7684\u552f\u4e00\u6027\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::shared_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u652f\u6301\u591a\u91cd\u6240\u6709\u6743\u6982\u5ff5\uff0c\u5373\u591a\u4e2a <code>std::shared_ptr</code> \u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u5bf9\u8c61\u751f\u547d\u5468\u671f\u9700\u8981\u7531\u591a\u4e2a\u6240\u6709\u8005\u5171\u540c\u7ba1\u7406\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u591a\u4e2a\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::weak_ptr</code></p> </li> <li>\u7279\u6027\uff1a\u63d0\u4f9b\u4e00\u79cd\u975e\u62e5\u6709\u6027\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u6765\u89c2\u5bdf <code>std::shared_ptr</code>\uff0c\u4f46\u4e0d\u5f71\u54cd\u5176\u5f15\u7528\u8ba1\u6570\u3002</li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u89e3\u51b3 <code>std::shared_ptr</code> \u53ef\u80fd\u5bfc\u81f4\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ol> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nclass Child;\nclass Parent;\n\nclass Parent : public std::enable_shared_from_this&lt;Parent&gt; {\npublic:\n    std::shared_ptr&lt;Child&gt; child;\n    ~Parent() { std::cout &lt;&lt; \"Parent destroyed\\n\"; }\n\n    void setChild(std::shared_ptr&lt;Child&gt; c) {\n        child = c;\n        child-&gt;setParent(shared_from_this());  // \u4f7f\u7528 shared_from_this() \u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684 shared_ptr\n    }\n};\n\nclass Child {\npublic:\n    std::weak_ptr&lt;Parent&gt; parent;  // \u4f7f\u7528 weak_ptr \u907f\u514d\u5faa\u73af\u5f15\u7528\n    ~Child() { std::cout &lt;&lt; \"Child destroyed\\n\"; }\n\n    void setParent(std::shared_ptr&lt;Parent&gt; p) {\n        parent = p;  // \u8bbe\u7f6e parent \u4e3a\u4f20\u5165\u7684 shared_ptr\n    }\n};\n\nint main() {\n    std::shared_ptr&lt;Parent&gt; p = std::make_shared&lt;Parent&gt;();\n    std::shared_ptr&lt;Child&gt; c = std::make_shared&lt;Child&gt;();\n    p-&gt;setChild(c);\n\n    std::cout &lt;&lt; \"Parent use count: \" &lt;&lt; p.use_count() &lt;&lt; std::endl;  // \u8f93\u51fa\u4f1a\u662f 2\uff0c\u56e0\u4e3a child \u4e5f\u6301\u6709 parent \u7684 shared_ptr\n    std::cout &lt;&lt; \"Child use count: \" &lt;&lt; c.use_count() &lt;&lt; std::endl;   // \u8f93\u51fa 1\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Pointer/#_2","title":"\u521b\u5efa\u548c\u4f7f\u7528\u667a\u80fd\u6307\u9488","text":"<ul> <li><code>std::make_shared</code></li> <li>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::shared_ptr</code> \u7684\u4f18\u9009\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\u5355\u4e00\u64cd\u4f5c\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u63d0\u9ad8\u6548\u7387\u5e76\u51cf\u5c11\u5f02\u5e38\u98ce\u9669\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> <li><code>std::make_unique</code></li> <li>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::unique_ptr</code> \u7684\u65b9\u6cd5\u3002\u7c7b\u4f3c\u4e8e <code>std::make_shared</code>\uff0c\u4f46\u4e13\u4e3a <code>std::unique_ptr</code> \u8bbe\u8ba1\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++14\u3002</li> <li><code>shared_from_this</code></li> <li>\u63cf\u8ff0\uff1a\u5f53\u7c7b\u7ee7\u627f\u81ea <code>std::enable_shared_from_this</code> \u65f6\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u5728\u7c7b\u5185\u90e8\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u81ea\u5df1\u7684 <code>std::shared_ptr</code>\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ul> <p><code>shared_from_this()</code> \u53ea\u80fd\u5728 <code>std::shared_ptr</code> \u5df2\u7ecf\u62e5\u6709\u8be5\u5bf9\u8c61\u65f6\u624d\u80fd\u5b89\u5168\u8c03\u7528\u3002\u5982\u679c\u5728\u4efb\u4f55 <code>std::shared_ptr</code> \u62e5\u6709\u5bf9\u8c61\u4e4b\u524d\u8c03\u7528\u5b83\uff0c\u7a0b\u5e8f\u5c06\u629b\u51fa <code>std::bad_weak_ptr</code> \u5f02\u5e38\u3002</p>"},{"location":"Learning/CS/Language/C%2B%2B/Pointer/#_3","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\n\nclass MyClass : public std::enable_shared_from_this&lt;MyClass&gt; {\npublic:\n    void show() {\n        auto sharedPtr = shared_from_this();\n        std::cout &lt;&lt; \"MyClass instance has \" &lt;&lt; sharedPtr.use_count() &lt;&lt; \" references\\n\";\n    }\n};\n\nint main() {\n    auto myObject = std::make_shared&lt;MyClass&gt;();\n    myObject-&gt;show();  // \u663e\u793a\u5f15\u7528\u8ba1\u6570\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/packages/","title":"Packages","text":""},{"location":"Learning/CS/Language/C%2B%2B/packages/#pcl","title":"pcl","text":"<pre><code>sudo apt update\nsudo apt install libpcl-dev\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/packages/#eigen3","title":"Eigen3","text":"<pre><code>sudo apt install libeigen3-dev\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/packages/#install-assimp","title":"Install ASSIMP","text":"<p>If ASSIMP is not already installed on your system, you will need to install it. On Ubuntu, you can typically install it using the package manager with the following command:</p> <pre><code>sudo apt update\nsudo apt install libassimp-dev\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/packages/#_1","title":"Packages","text":"<pre><code>sudo apt update\nsudo apt install libembree-dev\n</code></pre> <pre><code>sudo apt update\nsudo apt install libopencv-dev\n</code></pre> <pre><code>sudo apt update\nsudo apt install libglfw3-dev\n</code></pre> <pre><code>sudo apt update\nsudo apt install libgtk-3-dev\nsudo apt install nvidia-cuda-toolkit\nsudo apt install libxxf86vm-dev\nsudo apt install ffmpeg libavdevice-dev\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/","title":"Basic","text":"<ul> <li>\"a\"-&gt;string, 'a'-&gt;char</li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#value-range","title":"Value Range","text":""},{"location":"Learning/CS/Language/C%2B%2B/syntax/#_1","title":"\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b","text":"\u7c7b\u578b \u6700\u5c0f\u503c \u6700\u5927\u503c \u5907\u6ce8 <code>char</code> -128 127 \u81f3\u5c11 8 \u4f4d <code>short</code> -32,768 32,767 \u81f3\u5c11 16 \u4f4d <code>int</code> -2,147,483,648 2,147,483,647 \u901a\u5e38\u662f 32 \u4f4d <code>long</code> -2,147,483,648 2,147,483,647 \u81f3\u5c11 32 \u4f4d\uff0c\u4f46\u53ef\u80fd\u66f4\u957f <code>long long</code> -9,223,372,036,854,775,808 9,223,372,036,854,775,807 \u81f3\u5c11 64 \u4f4d"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#_2","title":"\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff08\u975e\u8d1f\u6570\uff09","text":"\u7c7b\u578b \u6700\u5c0f\u503c \u6700\u5927\u503c \u5907\u6ce8 <code>unsigned char</code> 0 255 \u81f3\u5c11 8 \u4f4d <code>unsigned short</code> 0 65,535 \u81f3\u5c11 16 \u4f4d <code>unsigned int</code> 0 4,294,967,295 \u901a\u5e38\u662f 32 \u4f4d <code>unsigned long</code> 0 4,294,967,295 \u81f3\u5c11 32 \u4f4d\uff0c\u4f46\u53ef\u80fd\u66f4\u957f <code>unsigned long long</code> 0 18,446,744,073,709,551,615 \u81f3\u5c11 64 \u4f4d"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#uniform-initialization","title":"Uniform Initialization","text":"<pre><code>int a{5}; // \u76f4\u63a5\u521d\u59cb\u5316\nstd::vector&lt;int&gt; v{1, 2, 3}; // \u7edf\u4e00\u521d\u59cb\u5316\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#auto-keyword-for-type-inference","title":"Auto Keyword for Type Inference","text":"<pre><code>auto x = 42;  // int\nauto y = 42.0;  // double\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#range-based-for-loops","title":"Range-based For Loops","text":"<pre><code>for (const auto&amp; elem : vec) {\n    // Do something with elem\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#lambda-expressions","title":"Lambda Expressions","text":"<pre><code>auto add = [](int a, int b) -&gt; int {\n    return a + b;\n};\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#smart-pointers","title":"Smart Pointers","text":"<pre><code>std::unique_ptr&lt;int&gt; p1(new int(42));\nstd::shared_ptr&lt;int&gt; p2 = std::make_shared&lt;int&gt;(42);\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#template-functions","title":"Template Functions","text":"<pre><code>template &lt;typename T&gt;\nT getMax(T a, T b) {\n    return (a &gt; b) ? a : b;\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#move-semantics","title":"Move Semantics","text":"<pre><code>std::vector&lt;int&gt; vec1 = {1, 2, 3};\nstd::vector&lt;int&gt; vec2 = std::move(vec1);  // Moves data from vec1 to vec2\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#structured-binding-c17","title":"Structured Binding (C++17)","text":"<pre><code>std::pair&lt;int, std::string&gt; p = {1, \"one\"};\nauto [num, word] = p;\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#variadic-templates","title":"Variadic Templates","text":"<pre><code>template&lt;typename... Args&gt;\nvoid printAll(Args... args) {\n    // Do something\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#pattern-match","title":"Pattern Match","text":""},{"location":"Learning/CS/Language/C%2B%2B/syntax/#switch","title":"Switch","text":"<pre><code>int value = /* some value */;\nswitch (value) {\n    case 1:\n        // do something\n        break;\n    case 2:\n        // do something else\n        break;\n    default:\n        // default case\n        break;\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/syntax/#unordered_map","title":"unordered_map","text":"<pre><code>unordered_map&lt;string, function&lt;int(int, int)&gt;&gt; operations = {\n            {\"+\", [](int a, int b) { return a + b; }},\n            {\"-\", [](int a, int b) { return a - b; }},\n            {\"*\", [](int a, int b) { return a * b; }},\n            {\"/\", [](int a, int b) { return a / b; }}\n        };\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/","title":"Queue","text":"<p>A queue is a container adaptor that provides a FIFO (First-In-First-Out) data structure. The standard library's <code>std::queue</code> is defined in the header <code>&lt;queue&gt;</code>.</p>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#initialization","title":"Initialization","text":"<ul> <li>Empty Queue:</li> </ul> <pre><code>std::queue&lt;int&gt; q;\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:</li> </ul> <pre><code>q.push(4);\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#access-elements","title":"Access Elements","text":"<ul> <li>Access Next Element:</li> </ul> <pre><code>int next = q.front();\n</code></pre> <ul> <li>Access Last Element:</li> </ul> <pre><code>int last = q.back();\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Next Element:</li> </ul> <pre><code>q.pop();  // Removes the element at the front of the queue\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Queue Size:</li> </ul> <pre><code>size_t size = q.size();\n</code></pre> <ul> <li>Check if Queue is Empty:</li> </ul> <pre><code>bool isEmpty = q.empty();\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Swap Contents:</li> </ul> <pre><code>std::queue&lt;int&gt; q1, q2;\nq1.swap(q2);  // Swaps the contents of q1 and q2\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/Queue/#examples","title":"Examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nint main() {\n    std::queue&lt;int&gt; q;\n\n    // Adding elements to the queue\n    q.push(1);\n    q.push(2);\n    q.push(3);\n\n    // Accessing elements\n    std::cout &lt;&lt; \"Front: \" &lt;&lt; q.front() &lt;&lt; std::endl; // Outputs 1\n    std::cout &lt;&lt; \"Back: \" &lt;&lt; q.back() &lt;&lt; std::endl;  // Outputs 3\n\n    // Removing elements\n    q.pop();  // Now the front is 2\n\n    // Checking size and if empty\n    std::cout &lt;&lt; \"Size: \" &lt;&lt; q.size() &lt;&lt; std::endl; // Outputs 2\n    std::cout &lt;&lt; \"Is empty: \" &lt;&lt; (q.empty() ? \"Yes\" : \"No\") &lt;&lt; std::endl;  // Outputs No\n\n    return 0;\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/String/","title":"String","text":"<pre><code>#include&lt;string&gt;\n\nstring str = \"Hello, world!\";  //\nstring sub = str.substr(0, 5);  // sub = \"Hello\"\n\n# \u7c7b\u578b\u8f6c\u6362\nint num = 43;\nstring sNum = to_string(num);\n\n# \u67e5\u627e\u5143\u7d20\nString.find()-&gt;size_t\n// \u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u5b57\u4e32\u7684index\u6216\u8005\u6ca1\u627e\u5230\u5c31\u662fstring::npos\nstd::string myString = \"Hello, world!\";\nsize_t position = myString.find(\"world\");// \u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/","title":"Map","text":""},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#initialization","title":"Initialization","text":"<ul> <li>Empty Map:</li> </ul> <pre><code>std::map&lt;int, std::string&gt; myMap;\n\n    std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n\n};\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n\nmyMap.emplace(1, \"one\"); // create key-value pair directly\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:</li> </ul> <pre><code>auto it = myMap.find(1);  // Returns iterator to the element if key exists, otherwise returns myMap.end()\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:</li> </ul> <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:</li> </ul> <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#iterating-through-map","title":"Iterating through Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:</li> </ul> <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:</li> </ul> <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/","title":"Set","text":"<ul> <li>std::set is an associative container that contains a sorted set of unique objects. It is usually implemented as a red-black tree.</li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#initialization","title":"Initialization","text":"<ul> <li>Empty Set:</li> </ul> <pre><code>std::set&lt;int&gt; mySet;\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(log n)):</li> </ul> <pre><code>mySet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(log n)):</li> </ul> <pre><code>mySet.emplace(10); // Construct and insert element\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(log n)):</li> </ul> <pre><code>auto it = mySet.find(10); // Returns iterator to the element if found, otherwise returns mySet.end()\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(log n)):</li> </ul> <pre><code>mySet.erase(10); // Erases element with value 10\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Set Size (O(1)):</li> </ul> <pre><code>size_t size = mySet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Set is Empty (O(1)):</li> </ul> <pre><code>bool isEmpty = mySet.empty(); // Returns true if set is empty, otherwise false\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#iterating-through-set","title":"Iterating through Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = mySet.begin(); it != mySet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):</li> </ul> <pre><code>for (const auto&amp; elem : mySet) {\n    // Access the element directly as elem\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Set (O(n)):</li> </ul> <pre><code>mySet.clear(); // Removes all elements from the set\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/stack/","title":"Stack","text":"<p>-</p> <pre><code>#include &lt;stack&gt;\nint main() {\n    std::stack&lt;int&gt; myStack;\n\n    // \u6dfb\u52a0\u5143\u7d20\u5230\u6808\u4e2d\n    myStack.push(1);\n    // \u8f93\u51fa\u6808\u9876\u5143\u7d20\n    myStack.top();\n\n    // \u79fb\u9664\u6808\u9876\u5143\u7d20\n    myStack.pop();\n\n    // \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\n    myStack.empty()\n\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/","title":"unordered_map","text":""},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Map:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap;  // Empty unordered_map\n</code></pre> <ul> <li>brace initialization:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n};\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:</li> </ul> <pre><code>auto it = myMap.find(1);\n// Returns iterator to the element if key exists, otherwise returns myMap.end()\nit-&gt;first  # key\nit-&gt;second # value\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:</li> </ul> <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:</li> </ul> <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#iterating-through-unordered-map","title":"Iterating through Unordered Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:</li> </ul> <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:</li> </ul> <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/","title":"Unordered set","text":"<ul> <li>std::unordered_set is an associative container that contains a set of unique objects. Search, insertion, and removal operations have average constant-time complexity.</li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Set:   <pre><code>std::unordered_set&lt;int&gt; myUnorderedSet;\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(1)):   <pre><code>myUnorderedSet.emplace(10); // Construct and insert element\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(1)):   <pre><code>auto it = myUnorderedSet.find(10);\n// Returns iterator to the element if found, otherwise returns myUnorderedSet.end()\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(1)):   <pre><code>myUnorderedSet.erase(10); // Erases element with value 10\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Unordered Set Size (O(1)):</li> </ul> <pre><code>size_t size = myUnorderedSet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Unordered Set is Empty (O(1)):   <pre><code>bool isEmpty = myUnorderedSet.empty(); // Returns true if unordered set is empty, otherwise false\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#iterating-through-unordered-set","title":"Iterating through Unordered Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = myUnorderedSet.begin(); it != myUnorderedSet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):   <pre><code>for (const auto&amp; elem : myUnorderedSet) {\n    // Access the element directly as elem\n}\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/unordered_set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Unordered Set (O(n)):   <pre><code>myUnorderedSet.clear(); // Removes all elements from the unordered set\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/","title":"Vector","text":""},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#initialization","title":"Initialization","text":"<ul> <li>Empty Vector:   <pre><code>std::vector&lt;int&gt; vec;\n</code></pre></li> <li>Pre-allocate Size:   <pre><code>std::vector&lt;int&gt; vec(10);  // Contains 10 elements, all initialized to 0\n</code></pre></li> <li>Pre-allocate Size with Value:   <pre><code>std::vector&lt;int&gt; vec(10, 1);  // Contains 10 elements, all initialized to 1\n</code></pre></li> <li>Initialize from Array:   <pre><code>int arr[] = {1, 2, 3};\nstd::vector&lt;int&gt; vec(arr, arr + sizeof(arr) / sizeof(int));\n</code></pre></li> <li>Initialize from Another Vector:   <pre><code>std::vector&lt;int&gt; vec2(vec);\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:   <pre><code>vec.push_back(4);\n</code></pre></li> <li>Insert at Beginning:   <pre><code>vec.insert(vec.begin(), 4);\n</code></pre></li> <li>Insert at Specific Position:   <pre><code>vec.insert(vec.begin() + 1, 4);\n</code></pre></li> <li>append vector</li> </ul> <pre><code>vec.insert(vec.end(),vec_2.begin(),vec_2.end())\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#access-elements","title":"Access Elements","text":"<ul> <li>Access Last Element:   <pre><code>int last = vec.back();\n</code></pre></li> <li>Access First Element:   <pre><code>int first = vec.front();\n</code></pre></li> <li>Access i-th Element (0-based):   <pre><code>int elem = vec[i];\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Last Element:   <pre><code>vec.pop_back();    -&gt;void\n</code></pre></li> <li>Remove i-th Element:   <pre><code>vec.erase(vec.begin() + i);\n</code></pre></li> <li>Remove a Range of Elements:   <pre><code>vec.erase(vec.begin() + i, vec.begin() + j);  // Removes elements from i to j-1\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Vector Size:   <pre><code>size_t size = vec.size();\n</code></pre></li> <li>Check if Vector is Empty:   <pre><code>bool isEmpty = vec.empty();\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Vector:   <pre><code>vec.clear();\n</code></pre></li> <li>Resize Vector:   <pre><code>vec.resize(20);  // New elements are initialized to 0\n</code></pre></li> <li>Find Element Position:   <pre><code>std::find(vec.begin(), vec.end(), value) != vec.end()\n</code></pre></li> <li>Sort Vector:   <pre><code>std::sort(vec.begin(), vec.end());\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/Data_model/vector/#examples","title":"examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {3, 1, 4, 1, 5, 9, 2, 6, 5};\n\n    // \u4f7f\u7528 std::min_element \u548c lambda \u51fd\u6570\u627e\u5230\u6700\u5c0f\u6b63\u6574\u6570\n    auto it = std::min_element(vec.begin(), vec.end(), [](int a, int b) {\n        if (a &lt;= 0) return false;\n        if (b &lt;= 0) return true;\n        return a &lt; b;\n    });\n\n    if (it != vec.end() &amp;&amp; *it &gt; 0) {\n        std::cout &lt;&lt; \"\u6700\u5c0f\u6b63\u6574\u6570\u662f\uff1a\" &lt;&lt; *it &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230\u6b63\u6574\u6570\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 2, 3, 4, 4, 5};\n\n    // \u5148\u6392\u5e8f\n    std::sort(vec.begin(), vec.end());\n\n    // \u4f7f\u7528 std::unique \u53bb\u91cd\n    auto last = std::unique(vec.begin(), vec.end());\n\n    // \u5220\u9664\u591a\u4f59\u5143\u7d20\n    vec.erase(last, vec.end());\n\n    // \u8f93\u51fa\u53bb\u91cd\u540e\u7684\u5411\u91cf\n    for (const auto&amp; elem : vec) {\n        std::cout &lt;&lt; elem &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Pointer/","title":"Pointer","text":""},{"location":"Learning/CS/Language/C%2B%2B/STL/Pointer/#c","title":"C++ \u667a\u80fd\u6307\u9488\u7b80\u4ecb","text":"<p>\u667a\u80fd\u6307\u9488\u662f\u73b0\u4ee3 C++ \u4e2d\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u5c01\u88c5\u539f\u59cb\u6307\u9488\uff0c\u5b83\u4eec\u5e2e\u52a9\u7a0b\u5e8f\u5458\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u5e76\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168\u3002C++11 \u6807\u51c6\u5f15\u5165\u4e86\u51e0\u79cd\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u4f7f\u5f97\u8d44\u6e90\u7ba1\u7406\u66f4\u52a0\u7b80\u5355\u548c\u5b89\u5168\u3002</p>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Pointer/#_1","title":"\u667a\u80fd\u6307\u9488\u7c7b\u578b","text":"<ol> <li> <p><code>std::unique_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u63d0\u4f9b\u5bf9\u5185\u5b58\u7684\u72ec\u5360\u6240\u6709\u6743\uff0c\u5373\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a <code>std::unique_ptr</code> \u53ef\u4ee5\u62e5\u6709\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u9700\u8981\u660e\u786e\u5355\u4e00\u6240\u6709\u6743\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61\u3002</li> <li>\u4e0d\u53ef\u590d\u5236\uff1a\u53ea\u80fd\u79fb\u52a8\uff0c\u786e\u4fdd\u6240\u6709\u6743\u7684\u552f\u4e00\u6027\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::shared_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u652f\u6301\u591a\u91cd\u6240\u6709\u6743\u6982\u5ff5\uff0c\u5373\u591a\u4e2a <code>std::shared_ptr</code> \u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u5bf9\u8c61\u751f\u547d\u5468\u671f\u9700\u8981\u7531\u591a\u4e2a\u6240\u6709\u8005\u5171\u540c\u7ba1\u7406\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u591a\u4e2a\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::weak_ptr</code></p> </li> <li>\u7279\u6027\uff1a\u63d0\u4f9b\u4e00\u79cd\u975e\u62e5\u6709\u6027\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u6765\u89c2\u5bdf <code>std::shared_ptr</code>\uff0c\u4f46\u4e0d\u5f71\u54cd\u5176\u5f15\u7528\u8ba1\u6570\u3002</li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u89e3\u51b3 <code>std::shared_ptr</code> \u53ef\u80fd\u5bfc\u81f4\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ol> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nclass Child;\nclass Parent;\n\nclass Parent : public std::enable_shared_from_this&lt;Parent&gt; {\npublic:\n    std::shared_ptr&lt;Child&gt; child;\n    ~Parent() { std::cout &lt;&lt; \"Parent destroyed\\n\"; }\n\n    void setChild(std::shared_ptr&lt;Child&gt; c) {\n        child = c;\n        child-&gt;setParent(shared_from_this());  // \u4f7f\u7528 shared_from_this() \u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684 shared_ptr\n    }\n};\n\nclass Child {\npublic:\n    std::weak_ptr&lt;Parent&gt; parent;  // \u4f7f\u7528 weak_ptr \u907f\u514d\u5faa\u73af\u5f15\u7528\n    ~Child() { std::cout &lt;&lt; \"Child destroyed\\n\"; }\n\n    void setParent(std::shared_ptr&lt;Parent&gt; p) {\n        parent = p;  // \u8bbe\u7f6e parent \u4e3a\u4f20\u5165\u7684 shared_ptr\n    }\n};\n\nint main() {\n    std::shared_ptr&lt;Parent&gt; p = std::make_shared&lt;Parent&gt;();\n    std::shared_ptr&lt;Child&gt; c = std::make_shared&lt;Child&gt;();\n    p-&gt;setChild(c);\n\n    std::cout &lt;&lt; \"Parent use count: \" &lt;&lt; p.use_count() &lt;&lt; std::endl;  // \u8f93\u51fa\u4f1a\u662f 2\uff0c\u56e0\u4e3a child \u4e5f\u6301\u6709 parent \u7684 shared_ptr\n    std::cout &lt;&lt; \"Child use count: \" &lt;&lt; c.use_count() &lt;&lt; std::endl;   // \u8f93\u51fa 1\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Pointer/#_2","title":"\u521b\u5efa\u548c\u4f7f\u7528\u667a\u80fd\u6307\u9488","text":"<ul> <li> <p><code>std::make_shared</code></p> </li> <li> <p>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::shared_ptr</code> \u7684\u4f18\u9009\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\u5355\u4e00\u64cd\u4f5c\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u63d0\u9ad8\u6548\u7387\u5e76\u51cf\u5c11\u5f02\u5e38\u98ce\u9669\u3002</p> </li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::make_unique</code></p> </li> <li> <p>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::unique_ptr</code> \u7684\u65b9\u6cd5\u3002\u7c7b\u4f3c\u4e8e <code>std::make_shared</code>\uff0c\u4f46\u4e13\u4e3a <code>std::unique_ptr</code> \u8bbe\u8ba1\u3002</p> </li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++14\u3002</p> </li> <li> <p><code>shared_from_this</code></p> </li> <li>\u63cf\u8ff0\uff1a\u5f53\u7c7b\u7ee7\u627f\u81ea <code>std::enable_shared_from_this</code> \u65f6\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u5728\u7c7b\u5185\u90e8\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u81ea\u5df1\u7684 <code>std::shared_ptr</code>\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ul> <p><code>shared_from_this()</code> \u53ea\u80fd\u5728 <code>std::shared_ptr</code> \u5df2\u7ecf\u62e5\u6709\u8be5\u5bf9\u8c61\u65f6\u624d\u80fd\u5b89\u5168\u8c03\u7528\u3002\u5982\u679c\u5728\u4efb\u4f55 <code>std::shared_ptr</code> \u62e5\u6709\u5bf9\u8c61\u4e4b\u524d\u8c03\u7528\u5b83\uff0c\u7a0b\u5e8f\u5c06\u629b\u51fa <code>std::bad_weak_ptr</code> \u5f02\u5e38\u3002</p>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Pointer/#_3","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\n\nclass MyClass : public std::enable_shared_from_this&lt;MyClass&gt; {\npublic:\n    void show() {\n        auto sharedPtr = shared_from_this();\n        std::cout &lt;&lt; \"MyClass instance has \" &lt;&lt; sharedPtr.use_count() &lt;&lt; \" references\\n\";\n    }\n};\n\nint main() {\n    auto myObject = std::make_shared&lt;MyClass&gt;();\n    myObject-&gt;show();  // \u663e\u793a\u5f15\u7528\u8ba1\u6570\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/","title":"Queue","text":"<p>A queue is a container adaptor that provides a FIFO (First-In-First-Out) data structure. The standard library's <code>std::queue</code> is defined in the header <code>&lt;queue&gt;</code>.</p>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#initialization","title":"Initialization","text":"<ul> <li>Empty Queue:   <pre><code>std::queue&lt;int&gt; q;\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:   <pre><code>q.push(4);\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#access-elements","title":"Access Elements","text":"<ul> <li>Access Next Element:</li> </ul> <pre><code>int next = q.front();\n</code></pre> <ul> <li>Access Last Element:   <pre><code>int last = q.back();\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Next Element:   <pre><code>q.pop();  // Removes the element at the front of the queue\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Queue Size:</li> </ul> <pre><code>size_t size = q.size();\n</code></pre> <ul> <li>Check if Queue is Empty:   <pre><code>bool isEmpty = q.empty();\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Swap Contents:   <pre><code>std::queue&lt;int&gt; q1, q2;\nq1.swap(q2);  // Swaps the contents of q1 and q2\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/Queue/#examples","title":"Examples","text":"<p>-</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nint main() {\n    std::queue&lt;int&gt; q;\n\n    // Adding elements to the queue\n    q.push(1);\n    q.push(2);\n    q.push(3);\n\n    // Accessing elements\n    std::cout &lt;&lt; \"Front: \" &lt;&lt; q.front() &lt;&lt; std::endl; // Outputs 1\n    std::cout &lt;&lt; \"Back: \" &lt;&lt; q.back() &lt;&lt; std::endl;  // Outputs 3\n\n    // Removing elements\n    q.pop();  // Now the front is 2\n\n    // Checking size and if empty\n    std::cout &lt;&lt; \"Size: \" &lt;&lt; q.size() &lt;&lt; std::endl; // Outputs 2\n    std::cout &lt;&lt; \"Is empty: \" &lt;&lt; (q.empty() ? \"Yes\" : \"No\") &lt;&lt; std::endl;  // Outputs No\n\n    return 0;\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/String/","title":"String","text":"<pre><code>#include&lt;string&gt;\n\nstring str = \"Hello, world!\";  //\nstring sub = str.substr(0, 5);  // sub = \"Hello\"\n\n# \u7c7b\u578b\u8f6c\u6362\nint num = 43;\nstring sNum = to_string(num);\n\n# \u67e5\u627e\u5143\u7d20\nString.find()-&gt;size_t\n// \u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u5b57\u4e32\u7684index\u6216\u8005\u6ca1\u627e\u5230\u5c31\u662fstring::npos\nstd::string myString = \"Hello, world!\";\nsize_t position = myString.find(\"world\");// \u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/algorithm/","title":"Algorithm","text":""},{"location":"Learning/CS/Language/C%2B%2B/STL/algorithm/#reverse","title":"reverse","text":"<p>-</p> <pre><code>#include &lt;algorithm&gt; // for std::reverse\n#include &lt;string&gt;\n\nint main() {\n    std::string str = \"Hello\";\n    std::reverse(str.begin(), str.end());\n    std::cout &lt;&lt; str &lt;&lt; std::endl;  // \u8f93\u51fa \"olleH\"\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/algorithm/#char-digit-to-int","title":"char digit to int","text":"<p>-</p> <pre><code>#include &lt;string&gt;\nint main() {\n    std::string digit_char = \"42\";\n    int num_1 = std::stoi(digit_char);\n    long num_2 = std::stol(digit_char);\n    long long num_3 = std::stoll(digit_char);\n\n    // single char\n    char digitChar = '4';\n    int digit = digitChar - '0';\n    return 0;\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/","title":"Map","text":""},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#initialization","title":"Initialization","text":"<ul> <li>Empty Map:</li> </ul> <pre><code>std::map&lt;int, std::string&gt; myMap;\n\n    std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n\n};\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n\nmyMap.emplace(1, \"one\"); // create key-value pair directly\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:   <pre><code>auto it = myMap.find(1);  // Returns iterator to the element if key exists, otherwise returns myMap.end()\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:   <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:   <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#iterating-through-map","title":"Iterating through Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:   <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:   <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/","title":"Set","text":"<ul> <li>std::set is an associative container that contains a sorted set of unique objects. It is usually implemented as a red-black tree.</li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#initialization","title":"Initialization","text":"<ul> <li>Empty Set:   <pre><code>std::set&lt;int&gt; mySet;\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(log n)):</li> </ul> <pre><code>mySet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(log n)):   <pre><code>mySet.emplace(10); // Construct and insert element\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(log n)):   <pre><code>auto it = mySet.find(10); // Returns iterator to the element if found, otherwise returns mySet.end()\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(log n)):   <pre><code>mySet.erase(10); // Erases element with value 10\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Set Size (O(1)):</li> </ul> <pre><code>size_t size = mySet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Set is Empty (O(1)):   <pre><code>bool isEmpty = mySet.empty(); // Returns true if set is empty, otherwise false\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#iterating-through-set","title":"Iterating through Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = mySet.begin(); it != mySet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):   <pre><code>for (const auto&amp; elem : mySet) {\n    // Access the element directly as elem\n}\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Set (O(n)):   <pre><code>mySet.clear(); // Removes all elements from the set\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/stack/","title":"Stack","text":"<p>-</p> <pre><code>#include &lt;stack&gt;\nint main() {\n    std::stack&lt;int&gt; myStack;\n\n    // \u6dfb\u52a0\u5143\u7d20\u5230\u6808\u4e2d\n    myStack.push(1);\n    // \u8f93\u51fa\u6808\u9876\u5143\u7d20\n    myStack.top();\n\n    // \u79fb\u9664\u6808\u9876\u5143\u7d20\n    myStack.pop();\n\n    // \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\n    myStack.empty()\n\n}\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/","title":"Unordered map","text":""},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Map:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap;  // Empty unordered_map\n</code></pre> <ul> <li>brace initialization:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n};\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:   <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:   <pre><code>auto it = myMap.find(1);\n// Returns iterator to the element if key exists, otherwise returns myMap.end()\nit-&gt;first  # key\nit-&gt;second # value\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:   <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:   <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#iterating-through-unordered-map","title":"Iterating through Unordered Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:   <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:   <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/","title":"Unordered set","text":"<ul> <li>std::unordered_set is an associative container that contains a set of unique objects. Search, insertion, and removal operations have average constant-time complexity.</li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Set:   <pre><code>std::unordered_set&lt;int&gt; myUnorderedSet;\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(1)):   <pre><code>myUnorderedSet.emplace(10); // Construct and insert element\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(1)):   <pre><code>auto it = myUnorderedSet.find(10);\n// Returns iterator to the element if found, otherwise returns myUnorderedSet.end()\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(1)):   <pre><code>myUnorderedSet.erase(10); // Erases element with value 10\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Unordered Set Size (O(1)):</li> </ul> <pre><code>size_t size = myUnorderedSet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Unordered Set is Empty (O(1)):   <pre><code>bool isEmpty = myUnorderedSet.empty(); // Returns true if unordered set is empty, otherwise false\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#iterating-through-unordered-set","title":"Iterating through Unordered Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = myUnorderedSet.begin(); it != myUnorderedSet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):   <pre><code>for (const auto&amp; elem : myUnorderedSet) {\n    // Access the element directly as elem\n}\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/unordered_set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Unordered Set (O(n)):   <pre><code>myUnorderedSet.clear(); // Removes all elements from the unordered set\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/","title":"Vector","text":""},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#initialization","title":"Initialization","text":"<ul> <li>Empty Vector:   <pre><code>std::vector&lt;int&gt; vec;\n</code></pre></li> <li>Pre-allocate Size:   <pre><code>std::vector&lt;int&gt; vec(10);  // Contains 10 elements, all initialized to 0\n</code></pre></li> <li>Pre-allocate Size with Value:   <pre><code>std::vector&lt;int&gt; vec(10, 1);  // Contains 10 elements, all initialized to 1\n</code></pre></li> <li>Initialize from Array:   <pre><code>int arr[] = {1, 2, 3};\nstd::vector&lt;int&gt; vec(arr, arr + sizeof(arr) / sizeof(int));\n</code></pre></li> <li>Initialize from Another Vector:   <pre><code>std::vector&lt;int&gt; vec2(vec);\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:   <pre><code>vec.push_back(4);\n</code></pre></li> <li>Insert at Beginning:   <pre><code>vec.insert(vec.begin(), 4);\n</code></pre></li> <li>Insert at Specific Position:   <pre><code>vec.insert(vec.begin() + 1, 4);\n</code></pre></li> <li>append vector</li> </ul> <pre><code>vec.insert(vec.end(),vec_2.begin(),vec_2.end())\n</code></pre>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#access-elements","title":"Access Elements","text":"<ul> <li>Access Last Element:   <pre><code>int last = vec.back();\n</code></pre></li> <li>Access First Element:   <pre><code>int first = vec.front();\n</code></pre></li> <li>Access i-th Element (0-based):   <pre><code>int elem = vec[i];\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Last Element:   <pre><code>vec.pop_back();    -&gt;void\n</code></pre></li> <li>Remove i-th Element:   <pre><code>vec.erase(vec.begin() + i);\n</code></pre></li> <li>Remove a Range of Elements:   <pre><code>vec.erase(vec.begin() + i, vec.begin() + j);  // Removes elements from i to j-1\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Vector Size:   <pre><code>size_t size = vec.size();\n</code></pre></li> <li>Check if Vector is Empty:   <pre><code>bool isEmpty = vec.empty();\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Vector:   <pre><code>vec.clear();\n</code></pre></li> <li>Resize Vector:   <pre><code>vec.resize(20);  // New elements are initialized to 0\n</code></pre></li> <li>Find Element Position:   <pre><code>std::find(vec.begin(), vec.end(), value) != vec.end()\n</code></pre></li> <li>Sort Vector:   <pre><code>std::sort(vec.begin(), vec.end());\n</code></pre></li> </ul>"},{"location":"Learning/CS/Language/C%2B%2B/STL/vector/#examples","title":"examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {3, 1, 4, 1, 5, 9, 2, 6, 5};\n\n    // \u4f7f\u7528 std::min_element \u548c lambda \u51fd\u6570\u627e\u5230\u6700\u5c0f\u6b63\u6574\u6570\n    auto it = std::min_element(vec.begin(), vec.end(), [](int a, int b) {\n        if (a &lt;= 0) return false;\n        if (b &lt;= 0) return true;\n        return a &lt; b;\n    });\n\n    if (it != vec.end() &amp;&amp; *it &gt; 0) {\n        std::cout &lt;&lt; \"\u6700\u5c0f\u6b63\u6574\u6570\u662f\uff1a\" &lt;&lt; *it &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230\u6b63\u6574\u6570\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 2, 3, 4, 4, 5};\n\n    // \u5148\u6392\u5e8f\n    std::sort(vec.begin(), vec.end());\n\n    // \u4f7f\u7528 std::unique \u53bb\u91cd\n    auto last = std::unique(vec.begin(), vec.end());\n\n    // \u5220\u9664\u591a\u4f59\u5143\u7d20\n    vec.erase(last, vec.end());\n\n    // \u8f93\u51fa\u53bb\u91cd\u540e\u7684\u5411\u91cf\n    for (const auto&amp; elem : vec) {\n        std::cout &lt;&lt; elem &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/","title":"\u8bbe\u7f6e\u4ee3\u7406 (clash)","text":"<ul> <li>npm</li> </ul> <pre><code>npm config set proxy http://127.0.0.1:7890\nnpm config set https-proxy https://127.0.0.1:7890\n</code></pre> <ul> <li>yarn v1</li> </ul> <pre><code>yarn config set proxy http://127.0.0.1:7890\nyarn config set https-proxy https://127.0.0.1:7890\n</code></pre> <ul> <li>yarn v2 (add into the .yarnrc.yml of project)</li> </ul> <pre><code>httpProxy: http://127.0.0.1:7890\nhttpsProxy: https://127.0.0.1:7890\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/#_1","title":"\u955c\u50cf\u6e90","text":"<pre><code>    // \u67e5\u8be2\u6e90\n    yarn config get registry\n\n    // \u66f4\u6362\u56fd\u5185\u6e90\n    yarn config set registry https://registry.npmmirror.com\n    yarn config get registry\n\n    // \u6062\u590d\u5b98\u65b9\u6e90\n    yarn config set registry https://registry.yarnpkg.com\n    yarn config get registry\n\n\n\n    // \u5220\u9664\u6ce8\u518c\u8868\n    yarn config delete registry\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/#_2","title":"\u67e5\u770b\u4ee3\u7406","text":"<pre><code>npm config get proxy\nnpm config get https-proxy\n\n\nyarn config get proxy\nyarn config get https-proxy\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/#_3","title":"\u5220\u9664","text":"<pre><code>yarn config delete proxy\nyarn config delete https-proxy\n\nnpm config delete proxy\nnpm config delete https-proxy\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/#vesrion","title":"vesrion","text":"<ul> <li>\u66f4\u65b0</li> </ul> <pre><code>npm update\n</code></pre> <pre><code>yarn upgrade\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/#_4","title":"\u4ee3\u7801\u683c\u5f0f\u5316","text":"<pre><code>yarn add eslint\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/npm_yarn/#openapijsonclient","title":"\u6839\u636eopenapi.json\u81ea\u52a8\u751f\u6210client","text":"<pre><code>yarn add openapi-typescript-codegen --save-dev\n</code></pre> <pre><code>npx openapi-typescript-codegen --input http://localhost:5000/api/v1/openapi.json --output ./src/api\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/vue.js/nuxt.js/","title":"Nuxt.js","text":"<p>p</p>"},{"location":"Learning/CS/Language/js_ts/vue.js/nuxt.js/#init-app","title":"init app","text":"<pre><code>npx nuxi init &lt;app&gt;\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/vue.js/nuxt.js/#eslint","title":"eslint","text":"<pre><code>yarn add -D eslint\nyarn add -D @nuxtjs/eslint-module\n</code></pre> <ol> <li>Add\u00a0<code>@nuxtjs/eslint-module</code>\u00a0to the\u00a0<code>modules</code>\u00a0section of\u00a0<code>nuxt.config.ts</code></li> </ol> <pre><code>export default defineNuxtConfig({  modules: [    // Simple usage    '@nuxtjs/eslint-module',    // With options    ['@nuxtjs/eslint-module', { /* module options */ }]  ]})\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/vue.js/nuxt.js/#pinia","title":"pinia","text":"<pre><code>npm i @pinia/nuxt\n</code></pre> <p>config</p> <pre><code>// Nuxt 3\nexport default defineNuxtConfig({ modules: [\"@pinia/nuxt\"] });\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/vue.js/nuxt.js/#auto-animate","title":"auto-animate","text":"<pre><code>yarn add @formkit/auto-animate\n</code></pre>"},{"location":"Learning/CS/Language/js_ts/vue.js/nuxt.js/#nuxt-vutify","title":"nuxt-vutify","text":"<pre><code>yarn add --dev \"@invictus.codes/nuxt-vuetify\"\n</code></pre> <p>nuxt-vutify</p> <pre><code>yarn add @nuxt/ui\n</code></pre> <p>pnpm dev</p>"},{"location":"Learning/CS/Language/python/py-env/Pip/","title":"Pip","text":"<ol> <li>pip freeze &gt; requirements.txt 1. \u751f\u6210\u4f9d\u8d56\u9879    yarn create strapi-app strapi_cms --quickstart    npx create-strapi-app@latest strapi_cms --quickstart    git config --global http.proxy 'socks5://127.0.0.1:7891'    git config --global https.proxy 'socks5://127.0.0.1:7891'</li> </ol> <p>git ls-remote --tags --heads https://github.com/strapi/ts-zen.git</p> <ol> <li>\u5168\u5c40\u5b89\u88c5</li> <li>win+r +&gt;cmd</li> <li> <p>pip install autopep8</p> </li> <li> <p>check conflicts</p> </li> </ol> <pre><code>pip check\n</code></pre> <p>uninstall</p> <pre><code>pip uninstall -r requirements.txt -y\n</code></pre> <pre><code>python3 -m venv env\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/","title":"Poetry","text":"<p>Poetry is a dependency management and packaging tool in Python. It allows you to declare the libraries your project depends on and manage distribution packages.</p>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#installation-of-poetry","title":"Installation of Poetry","text":"<p>Reference Documentation: Poetry Official Documentation</p> <p>Install Poetry with the following PowerShell command:</p> <pre><code>(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#setting-environment-variables","title":"Setting Environment Variables","text":"<p>Ensure that the <code>poetry.exe</code> file is located in <code>C:\\Users\\18317\\AppData\\Local\\Programs\\Python\\Python311\\Scripts</code> and add this path to the environment variable:</p> <pre><code>$Env:Path += \";C:\\Users\\35238\\AppData\\Roaming\\Python\\Scripts\"; setx PATH \"$Env:Path\"\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#poetry-commands","title":"Poetry Commands","text":""},{"location":"Learning/CS/Language/python/py-env/Poetry/#project-initialization","title":"Project Initialization","text":"<p>Use the current directory's <code>pyproject.toml</code> environment:</p> <pre><code>poetry env use python\n</code></pre> <p>Create a new project (with <code>src</code> directory):</p> <pre><code>poetry new --src your_project\n</code></pre> <p>Initialize <code>pyproject.toml</code> file:</p> <pre><code>poetry init\n</code></pre> <p>Set Poetry configuration (e.g., to create virtual environments):</p> <pre><code>poetry config virtualenvs.create true --local\n</code></pre> <p>List Poetry configuration:</p> <pre><code>poetry config --list\n</code></pre> <p>Display environment information:</p> <pre><code>poetry env info\n</code></pre> <p>Create a project named <code>poetry-demo</code> with a <code>src</code> folder:</p> <pre><code>poetry new --src poetry-demo\n</code></pre> <p>Check Poetry version:</p> <pre><code>poetry --version\n</code></pre> <p>Add a Python package (e.g., add <code>request</code>):</p> <pre><code>poetry add request\n</code></pre> <p>Get the path to the virtual environment (for use in IDEs like PyCharm):</p> <pre><code>poetry env info --path\n</code></pre> <p>Export <code>requirements.txt</code> file:</p> <pre><code>poetry export -f requirements.txt --output requirements.txt\n</code></pre> <p>List virtual environments:</p> <pre><code>poetry env list\n</code></pre> <p>Remove a specific virtual environment:</p> <pre><code>poetry env remove &lt;venv_name&gt;\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#dependency-management","title":"Dependency Management","text":""},{"location":"Learning/CS/Language/python/py-env/Poetry/#export-requirementstxt","title":"Export <code>requirements.txt</code>","text":"<pre><code>poetry export -f requirements.txt --output requirements.txt\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#install-dependencies-from-requirementstxt","title":"Install Dependencies from <code>requirements.txt</code>","text":"<pre><code>poetry add $(cat requirements.txt)\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#publishing-packages","title":"Publishing Packages","text":""},{"location":"Learning/CS/Language/python/py-env/Poetry/#initialize-pypi","title":"Initialize PyPI","text":"<pre><code>poetry config pypi-token.pypi &lt;token&gt;\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/Poetry/#build-and-publish","title":"Build and Publish","text":"<pre><code>Remove-Item -Path 'dist/*' -Recurse -Force\n\npoetry publish --build\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/UV/","title":"UV","text":""},{"location":"Learning/CS/Language/python/py-env/UV/#installation","title":"Installation","text":"<ul> <li>download</li> </ul> <pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <ul> <li>apply</li> </ul> <pre><code>source $HOME/.cargo/env\n</code></pre> <ul> <li>update</li> </ul> <pre><code>uv self update\n</code></pre> <ul> <li>auto auto completion</li> </ul> <pre><code># Determine your shell (e.g., with `echo $SHELL`), then run one of:\necho 'eval \"$(uv generate-shell-completion bash)\"' &gt;&gt; ~/.bashrc\necho 'eval \"$(uv generate-shell-completion zsh)\"' &gt;&gt; ~/.zshrc\necho 'uv generate-shell-completion fish | source' &gt;&gt; ~/.config/fish/config.fish\necho 'eval (uv generate-shell-completion elvish | slurp)' &gt;&gt; ~/.elvish/rc.elv\n</code></pre> <ul> <li>Uninstallation</li> </ul> <pre><code>uv cache clean\nrm -r \"$(uv python dir)\"\nrm -r \"$(uv tool dir)\"\nrm ~/.cargo/bin/uv ~/.cargo/bin/uvx\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/UV/#python","title":"python","text":"<ul> <li><code>uv</code> will\u00a0automatically fetch Python versions\u00a0as needed \u2014 you don't need to install Python to get started.</li> <li>also it can manage your python envs</li> <li>Once Python is installed, it will be used by\u00a0<code>uv</code>\u00a0commands automatically.</li> <li>activate venv</li> </ul> <pre><code>uv sync\nsource .venv/bin/activate\n</code></pre> <ul> <li>Finding a Python executable</li> </ul> <pre><code>uv python find\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/conda/","title":"Conda","text":"<ul> <li>path env</li> </ul> <pre><code>C:\\Users\\18317\\anaconda3\\Scripts\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/conda/#proxy-for-clash","title":"proxy for clash","text":"<ul> <li>add and test</li> </ul> <pre><code>conda config --set proxy_servers.http http://127.0.0.1:7890\nconda config --set proxy_servers.https https://127.0.0.1:7890\nconda config --show proxy_servers\nconda install --dry-run fastapi\n</code></pre> <ul> <li>remove</li> </ul> <pre><code>conda config --remove-key proxy_servers\nconda config --show proxy_servers\nconda install --dry-run fastapi\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/conda/#channels","title":"channels","text":"<ul> <li>3rd</li> </ul> <pre><code>conda config --add channels conda-forge\nconda config --set channel_priority strict\n</code></pre> <pre><code>conda config --show channels\n</code></pre> <ul> <li>search</li> </ul> <pre><code>conda search cudnn --channel conda-forge\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/conda/#install-deps","title":"install deps","text":"<ul> <li>install from environment.yml</li> </ul> <pre><code>conda env create -f environment.yml\n</code></pre> <ul> <li>output current env deps to environment.yml</li> </ul> <pre><code>conda env export --from-history &gt; environment.yml\n</code></pre> <ul> <li>update from environment.yml <code>--prune</code> for auto update deps</li> </ul> <pre><code>conda env update -f environment.yml\n</code></pre> <ul> <li>install by auto update deps</li> </ul> <pre><code>conda install &lt;package&gt; --update-all\n</code></pre>"},{"location":"Learning/CS/Language/python/py-env/conda/#info-check","title":"info check","text":"<ul> <li>show conda info</li> </ul> <pre><code>conda info\n</code></pre> <ul> <li>show all conda envs</li> </ul> <pre><code>conda env list\n</code></pre> <ul> <li>current env packages</li> </ul> <pre><code>conda list\n</code></pre> <ul> <li>specified env packages</li> </ul> <pre><code>conda list -n &lt;env&gt;\n</code></pre>"},{"location":"Learning/CS/Language/python/standard_lib/Pathlib/","title":"Pathlib","text":"<ul> <li>\u73b0\u4ee3\u7684 \u9762\u5411\u5bf9\u8c61 \u7684\u7cfb\u7edf \u8def\u5f84 \u7ba1\u7406\u5e93</li> </ul> <p>classmethod\u00a0Path.cwd() \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8868\u793a\u5f53\u524d\u76ee\u5f55\u7684\u8def\u5f84\u5bf9\u8c61\uff08\u548c\u00a0<code>os.getcwd()</code>\u00a0\u8fd4\u56de\u7684\u76f8\u540c\uff0c\u4e5f\u662f\u811a\u672c\u88ab\u8c03\u7528\u7684\u5730\u65b9 Path(__file__)\u662f\u811a\u672c\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u548c\u88ab\u8c03\u7528\u8005\u65e0\u5173</p>"},{"location":"Learning/CS/Language/python/standard_lib/Pathlib/#class-attributes","title":"class attributes","text":"<ol> <li>PurePath.parents    \u63d0\u4f9b\u8bbf\u95ee\u6b64\u8def\u5f84\u7684\u903b\u8f91\u7956\u5148\u7684\u4e0d\u53ef\u53d8\u5e8f\u5217:</li> </ol> <pre><code>&gt;&gt;&gt; p = Path('some path dir....')\n&gt;&gt;&gt; p.parent == p.parents[0]\nTrue\n&gt;&gt;&gt; p.Parent.parent = p.parents[1]\nTrue\n......\u4ee5\u6b64\u7c7b\u63a8\n\"\"\" python 3.10 \u652f\u6301 \u8d1f\u6570 \u7d22\u5f15\u548c \u5207\u7247\"\"\"\n</code></pre> <ol> <li>PurePath.name</li> <li>\u6700\u540e\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5373dir\u6700\u6df1\u5904\u7684file_name\uff08with suffix\uff09or folder_name</li> </ol> <pre><code>&gt;&gt;&gt; PurePosixPath('my/library/setup.py').name\n'setup.py'\n</code></pre> <ol> <li>PurePath.suffix\u00b6</li> <li>\u5373PurePath.name\u7684\u540e\u7f00str</li> </ol> <pre><code>&gt;&gt;&gt; PurePosixPath('my/library/setup.py').suffix\n'.py'\n&gt;&gt;&gt; PurePosixPath('my/library.tar.gz').suffix\n'.gz'\n&gt;&gt;&gt; PurePosixPath('my/library').suffix\n''\n</code></pre>"},{"location":"Learning/CS/Language/python/third_party_lib/pyqt6/","title":"Pyqt6","text":""},{"location":"Learning/CS/Language/python/third_party_lib/pyqt6/#load-resource","title":"load resource","text":"<ul> <li>generate</li> </ul> <pre><code>pyside6-rcc -o compiled_resources.py resource.qrc\n</code></pre> <ul> <li>add the following into your compiled_resources.py</li> </ul> <pre><code>from PyQt6 import QtCore\n</code></pre> <ul> <li>usage</li> </ul> <pre><code>imoprt compiled_resources\nQlabel(\":images/test.png\")\n</code></pre>"},{"location":"Learning/CS/OS/Docker/","title":"Docker","text":""},{"location":"Learning/CS/OS/Docker/#install-docker-and-compose","title":"Install Docker and - Compose","text":"<p>amd_x64</p> <pre><code>sudo apt update\nsudo apt install apt-transport-https ca-certificates curl software-properties-common\n# add GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n# set docker repo\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n# install docker engine\nsudo apt update\nsudo apt install docker-ce docker-ce-cli containerd.io\n# start docker\nsudo systemctl start docker\nsudo systemctl enable docker\n# install docker compose\nsudo curl -L \"https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n# check\ndocker-compose --version\n</code></pre>"},{"location":"Learning/CS/OS/Docker/#use-docker-by-user-without-sudo","title":"Use Docker by User without <code>sudo</code>","text":"<pre><code>sudo usermod -aG docker username\n</code></pre>"},{"location":"Learning/CS/OS/GPU/","title":"GPU","text":""},{"location":"Learning/CS/OS/GPU/#wsl","title":"Wsl","text":"<p>WSL== Linux Ubuntu 22.04 x86_64</p>"},{"location":"Learning/CS/OS/GPU/#preconditions","title":"Preconditions","text":"<ol> <li>make sure windows GPU driver has installed</li> </ol> <p>Windows x86 drivers can be directly downloaded fromhttps://www.nvidia.com/Download/index.aspx for WSL 2 support on Pascal or later GPUs.</p> <ul> <li> <p>if not ,install on windows by None</p> </li> <li> <p>make sure the wsl kernel is updated</p> </li> </ul> <p>For these features, you need a kernel version of 5.10.43.3 or higher.</p> <pre><code># check wsl kernel version\nwsl cat /proc/version\n# uodate\nwsl --update\n</code></pre> <ol> <li>check wsl2 can touch the GPU</li> </ol> <pre><code>nvidia-smi\n</code></pre> <ul> <li>then got the following prove the <code>wsl</code> can touch the GPU</li> <li>image shows that my GPU can install the highest <code>cuda==12.4</code></li> </ul>"},{"location":"Learning/CS/OS/GPU/#install-cuda-and-cudnn","title":"Install Cuda and Cudnn","text":"<p>firstly, make sure the which version is needed for your installed package</p> <pre><code>poetry add onnxruntime\n</code></pre> <ul> <li>then check the <code>pyproject.toml</code> you got things like</li> </ul> <pre><code>[tool.poetry.dependencies]\npython = \"^3.11\"\nonnxruntime-gpu = \"^1.17.0\"\n</code></pre> <p>so ,here's example for <code>onnxruntime-gpu==1.17</code></p> <ul> <li>select proper version of onnxruntime in NVIDIA - CUDA | onnxruntime </li> <li>as for installed <code>onnxruntime-gpu==1.17</code>, should install <code>cuda==11.8</code>, <code>cudnn==8.92.26</code></li> </ul>"},{"location":"Learning/CS/OS/GPU/#cuda","title":"Cuda","text":"<ol> <li> <p>CUDA Toolkit Archive | NVIDIA Developerselect <code>cuda==11.8</code> and click it</p> </li> <li> <p>in download page select</p> </li> </ol> <pre><code>linux-&gt;x86_64-&gt;WSL-ubuntu-&gt;2.0-&gt;deb(loacl)\n</code></pre> <ul> <li>then your got it, run to install</li> </ul> <pre><code>wget https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pin\nsudo mv cuda-wsl-ubuntu.pin /etc/apt/preferences.d/cuda-repository-pin-600\nwget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda-repo-wsl-ubuntu-11-8-local_11.8.0-1_amd64.deb\nsudo dpkg -i\u00a0cuda-repo-wsl-ubuntu-11-8-local_11.8.0-1_amd64.deb\nsudo cp /var/cuda-repo-wsl-ubuntu-11-8-local/cuda-*-keyring.gpg /usr/share/keyrings/sudo apt-get update\nsudo apt-get -y install cuda\n# if sudo apt-get -y install cuda install the wrong version\n# search available package\nsudo apt-cache search cuda-toolkit\n# install by specifing version\nsudo apt-get -y install cuda-toolkit-11-8\n</code></pre> <ol> <li>add env_path</li> </ol> <pre><code>sudo nano /etc/environment\n# add following\nPATH=\"/usr/local/cuda-11.8/bin:....\" # insert the begin of PATH\nCUDA_PATH=\"/usr/local/cuda\"\nLD_LIBRARY_PATH=\"/usr/local/cuda-11.8/lib64\"\n# apply changes\nsource /etc/environment\n</code></pre> <ol> <li>test cuda</li> </ol> <pre><code>nvcc -V\n-&gt;\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2022 NVIDIA Corporation\nBuilt on Wed_Sep_21_10:33:58_PDT_2022\nCuda compilation tools, release 11.8, V11.8.89\nBuild cuda_11.8.r11.8/compiler.31833905_0\n</code></pre> <ul> <li><code>release 11.8</code> -&gt; <code>cuda==11.8</code>,if not the specified version, reinstall it</li> </ul>"},{"location":"Learning/CS/OS/GPU/#cudnn","title":"Cudnn","text":"<ol> <li> <p>download cuDNN Archive | NVIDIA Developer on windows, and upload WSL</p> </li> <li> <p>as for <code>cudnn==8.92.26</code> and <code>cuda==11.8</code> we assume you upload <code>.deb</code> to <code>/home/atticuszz/</code></p> </li> <li> <p>install <code>.deb</code></p> </li> </ol> <pre><code>sudo dpkg -i /home/atticuszz/cudnn-local-repo-ubuntu2204-8.9.2.26_1.0-1_amd64.deb\n</code></pre> <p>it may appear tips to cp things like ,make sure run it to Add the GPG key</p> <pre><code>sudo cp /var/cudnn-local-repo-ubuntu2204-8.9.2.26/cudnn-local-D7CBF0C2-keyring.gpg /usr/share/keyrings/\n\n# Update the APT package index\nsudo apt-get update\n# Install cuDNN runtime library\nsudo apt-get install libcudnn8\n# for check version\nsudo apt-get install libcudnn8-dev\n</code></pre> <ol> <li>check installed</li> </ol> <pre><code># This should list the installed cuDNN runtime library files\nls -l /usr/lib/x86_64-linux-gnu/libcudnn*\n-&gt;...\n\ncat /usr/include/cudnn_version.h | grep CUDNN_MAJOR -A 2\n</code></pre> <ul> <li>-&gt;</li> <li>gpu test</li> </ul> <pre><code>docker run --gpus all nvcr.io/nvidia/k8s/cuda-sample:nbody nbody -gpu -benchmark\n</code></pre>"},{"location":"Learning/CS/OS/GPU/#ubuntu","title":"Ubuntu","text":""},{"location":"Learning/CS/OS/GPU/#install-gpu-driver","title":"Install Gpu Driver","text":""},{"location":"Learning/CS/OS/GPU/#install-via-conda","title":"Install via Conda","text":"<pre><code>name: your env\nchannels:\n  - conda-forge\n  - nvidia\n  - defaults\ndependencies:\n  - python=3.10\n  - cudatoolkit=11.8\n  - cudnn=8.9.2.26\n</code></pre>"},{"location":"Learning/CS/OS/GPU/#gpu-monitor","title":"Gpu Monitor","text":"<pre><code>conda install -c conda-forge nvitop\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/bugs/","title":"Bugs","text":"<ol> <li>run <code>sudo apt-get update</code> got</li> </ol> <pre><code>root@Atticus-zhou:/home/atticuszz# sudo apt-get update\nHit:1 http://archive.ubuntu.com/ubuntu jammy InRelease           Hit:2 https://download.docker.com/linux/ubuntu jammy InRelease   Hit:3 https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64  InRelease\nHit:4 http://security.ubuntu.com/ubuntu jammy-security InRelease                                                           Hit:5 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\nHit:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease\nHit:7 http://archive.ubuntu.com/ubuntu jammy-backports InRelease\nTraceback (most recent call last):\n  File \"/usr/lib/cnf-update-db\", line 3, in &lt;module&gt;\n    import apt_pkg\nModuleNotFoundError: No module named 'apt_pkg'\nReading package lists... Done\nE: Problem executing scripts APT::Update::Post-Invoke-Success 'if /usr/bin/test -w /var/lib/command-not-found/ -a -e /usr/lib/cnf-update-db; then /usr/lib/cnf-update-db &gt; /dev/null; fi'\nE: Sub-process returned an error code\n</code></pre> <ul> <li>solved by following</li> </ul> <pre><code>cd /usr/lib/python3/dist-packages\nls -la | grep \"apt_pkg.cpython\"\n-&gt; -rw-r--r--  1 root root 347096 Aug  2  2023 apt_pkg.cpython-310-x86_64-linux-gnu.so\n# then cp that apt_pkg.cpython-310-x86_64-linux-gnu.so\n sudo cp apt_pkg.cpython-310-x86_64-linux-gnu.so apt_pkg.so\n</code></pre> <p>sudo cp apt_pkg.cpython-310-aarch64-linux-gnu.so apt_pkg.so</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#open3d","title":"open3d","text":"<p>me/atticuszz/miniconda3/envs/localization/bin/python /home/atticuszz/DevSpace/AutoDrive_backend/src/localization/ReplicaLoader.py libGL error: MESA-LOADER: failed to open radeonsi: /usr/lib/dri/radeonsi_dri.so: cannot open shared object file: No such file or directory (search paths /usr/lib/x86_64-linux-gnu/dri:$\\({ORIGIN}/dri:/usr/lib/dri, suffix _dri) libGL error: failed to load driver: radeonsi libGL error: MESA-LOADER: failed to open swrast: /usr/lib/dri/swrast_dri.so: cannot open shared object file: No such file or directory (search paths /usr/lib/x86_64-linux-gnu/dri:\\$\\)/dri:/usr/lib/dri, suffix _dri) libGL error: failed to load driver: swrast [Open3D WARNING] GLFW Error: GLX: Failed to create context: GLXBadFBConfig [Open3D WARNING] Failed to create window [Open3D WARNING] [DrawGeometries] Failed creating OpenGL window. what should i to install to fix it? Grimoire</p> <p>The errors you're encountering are related to the OpenGL drivers on your Linux system, specifically with Mesa drivers for Radeon graphics (<code>radeonsi</code>) and the software rasterizer fallback (<code>swrast</code>). These issues typically occur due to missing or misconfigured graphics drivers, or because the application or library (in this case, Open3D) is unable to correctly locate or use the OpenGL libraries. Here's how you can address these issues:</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-1-update-your-system","title":"Step 1: Update Your System","text":"<p>Before proceeding with specific fixes, ensure your system is up to date. This can sometimes resolve driver issues by installing the latest versions of libraries and drivers.</p> <p>For Ubuntu or Debian-based systems, use:</p> <p>bashCopy code</p> <p><code>sudo apt-get update sudo apt-get upgrade</code></p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-2-install-or-reinstall-mesa-drivers","title":"Step 2: Install or Reinstall Mesa Drivers","text":"<p>Mesa provides the OpenGL implementation for AMD (including Radeon), Intel, and other GPUs on Linux. Ensure the Mesa drivers are installed and up to date.</p> <p>bashCopy code</p> <p><code>sudo apt-get install --reinstall libgl1-mesa-glx libgl1-mesa-dri</code></p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-3-install-missing-libraries","title":"Step 3: Install Missing Libraries","text":"<p>The errors indicate missing <code>radeonsi_dri.so</code> and <code>swrast_dri.so</code>. These are part of the Mesa drivers. Reinstalling Mesa drivers should solve this, but ensure all necessary components are installed:</p> <p>bashCopy code</p> <p><code>sudo apt-get install mesa-utils</code></p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-4-configure-your-system-to-use-the-correct-drivers","title":"Step 4: Configure Your System to Use the Correct Drivers","text":"<p>If you have multiple graphics drivers installed, your system might not be using the correct one. Configure your system to use the Mesa drivers:</p> <ul> <li>For AMD GPUs, ensure the <code>radeonsi</code> driver is enabled. This is typically handled automatically, but problems can still occur.</li> </ul>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-5-check-for-hardware-acceleration","title":"Step 5: Check for Hardware Acceleration","text":"<p>Ensure that hardware acceleration is enabled and working:</p> <p>bashCopy code</p> <p><code>glxinfo | grep \"direct rendering\"</code></p> <p>You should see <code>direct rendering: Yes</code> in the output.</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-6-set-libgl_drivers_path","title":"Step 6: Set LIBGL_DRIVERS_PATH","text":"<p>If the system still can't find the drivers, you might need to manually set the <code>LIBGL_DRIVERS_PATH</code> environment variable to point to the directory containing the drivers (<code>radeonsi_dri.so</code> and <code>swrast_dri.so</code>):</p> <p>bashCopy code</p> <p><code>export LIBGL_DRIVERS_PATH=/usr/lib/dri</code></p> <p>You can add this line to your <code>.bashrc</code> or <code>.bash_profile</code> (for bash shell) or the equivalent for your shell to make the change permanent.</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-7-verify-installation-and-configuration","title":"Step 7: Verify Installation and Configuration","text":"<p>After installing or reinstalling the necessary drivers and libraries, reboot your system. Then, verify that OpenGL is working correctly:</p> <p>bashCopy code</p> <p><code>glxgears</code></p> <p>If you see a window with gears turning, the basic OpenGL setup is correct.</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#step-8-check-for-open3d-specific-requirements","title":"Step 8: Check for Open3D Specific Requirements","text":"<p>Open3D might have specific requirements or configurations. Check the Open3D documentation or forums for any additional setup or configuration steps specific to your system or the version of Open3D you're using.</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#if-problems-persist","title":"If Problems Persist","text":"<p>If you continue to experience issues after following these steps:</p> <ul> <li>Check the Open3D GitHub issues page for similar problems reported by other users.</li> <li>Consider reporting your issue there with detailed information about your system, the steps you've taken, and the exact error messages.</li> </ul> <p>This approach addresses the most common causes of OpenGL driver issues on Linux. However, if your setup is highly customized or you're using less common hardware, additional steps may be necessary.</p>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#settings-disappper","title":"Settings Disappper","text":"<pre><code>sudo apt update\nsudo apt upgrade\nsudo apt full-upgrade\n\nsudo apt update\nsudo apt install --reinstall gnome-control-center\n</code></pre> <p>solved: Could not load the Qt platform plugin \"xcb\" \u00b7 NVlabs/instant-ngp \u00b7 Discussion #300 \u00b7 GitHub</p> <pre><code>pip uninstall opencv-python\npip install opencv-python-headless\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/bugs/#time-wrong-in-dul-system","title":"Time Wrong in Dul System","text":"<p>\u8981\u5728 Windows \u4e2d\u66f4\u6539 RTC \u8bbe\u7f6e\u4e3a UTC\uff0c\u4f60\u9700\u8981\u7f16\u8f91\u6ce8\u518c\u8868\uff1a a. \u6309\u4e0b <code>Win + R</code> \u952e\u5165 <code>regedit</code>\uff0c\u7136\u540e\u6309\u56de\u8f66\u3002 b. \u5bfc\u822a\u5230 <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation</code>\u3002 c. \u53f3\u952e\u5355\u51fb\u7a7a\u767d\u533a\u57df\uff0c\u9009\u62e9 <code>\u65b0\u5efa</code> -&gt; <code>DWORD (32\u4f4d) \u503c</code>\u3002 d. \u5c06\u65b0\u503c\u547d\u540d\u4e3a <code>RealTimeIsUniversal</code>\u3002 e. \u53cc\u51fb\u65b0\u521b\u5efa\u7684 <code>RealTimeIsUniversal</code>\uff0c\u5728\u201c\u503c\u6570\u636e\u201d\u6846\u4e2d\u8f93\u5165 <code>1</code>\uff0c\u7136\u540e\u70b9\u51fb\u201c\u786e\u5b9a\u201d\u3002 f. \u91cd\u542f Windows\u3002F\u3002\u91cd\u65b0\u542f\u52a8 Windows\u3002</p>"},{"location":"Learning/CS/OS/Ubuntu/code_env/","title":"code_env","text":""},{"location":"Learning/CS/OS/Ubuntu/code_env/#install-cmake","title":"Install Cmake","text":"<pre><code>sudo apt-get update\nsudo apt-get install cmake\ncmake --version\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/code_env/#install-python","title":"Install Python","text":"<ul> <li>python 3</li> </ul> <p>do not change system python !!!</p> <ul> <li>python venv</li> </ul> <pre><code>sudo apt update\nsudo apt install python3-venv\npython3 -m venv myenv\nsource myenv/bin/activate\npip install -r requirements.txt\n# to get out of current venv\ndeactivate\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/code_env/#install-poetry","title":"Install Poetry","text":"<pre><code>curl -sSL https://install.python-poetry.org | python3 -\nnano ~/.bashrc\n# add it\nexport PATH=\"/root/.local/bin:$PATH\"\nsource ~/.bashrc\npoetry --version\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/code_env/#install-conda","title":"Install Conda","text":"<ol> <li>install by wget</li> </ol> <pre><code>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nchmod +x Miniconda3-latest-Linux-x86_64.sh\n./Miniconda3-latest-Linux-x86_64.sh\n# note it may show that conda installed in /root/miniconda3\n</code></pre> <p>remember set no to auto activate in your shell if u use poetry,etc to manage py-env</p> <ol> <li>add <code>/root/miniconda3/bin</code> to <code>PATH</code> in <code>/etc/environment</code></li> </ol> <pre><code>PATH=\"/root/miniconda3/bin:\"\nsource /etc/environment\n# or\nexport PATH=\"/root/miniconda3/bin:$PATH\"\n</code></pre> <ol> <li>test conda</li> </ol> <pre><code>conda info\n</code></pre> <ol> <li>optional, enable auto activate conda</li> </ol> <pre><code>conda config --set auto_activate_base true\n</code></pre> <p>repeat to warn <code>conda init</code> ,try <code>conda init &lt;shell&gt;</code></p>"},{"location":"Learning/CS/OS/Ubuntu/code_env/#install-node-js","title":"Install Node-js","text":"<pre><code>cd ~/Downloads\nmkdir ~/node\ntar -xJvf node-v20.11.1-linux-x64.tar.xz -C ~/node\n\nexport PATH=~/node/node-v20.11.1-linux-x64/bin:$PATH\nsource ~/.zshrc\nnode -v\nnpm -v\n</code></pre> <p>Backlinks:</p>"},{"location":"Learning/CS/OS/Ubuntu/configs/","title":"Configs","text":"<p>ubuntu could be install via usb or wsl</p>"},{"location":"Learning/CS/OS/Ubuntu/configs/#install-system","title":"Install System","text":""},{"location":"Learning/CS/OS/Ubuntu/configs/#usb","title":"Usb","text":"<ul> <li> <p>official tutorialInstall Ubuntu desktop | Ubuntu</p> </li> <li> <p>download <code>ios file</code> Download Ubuntu Desktop | Download | Ubuntu</p> </li> <li>download <code>Flash OS images app</code>balenaEtcher - Flash OS images to SD cards &amp; USB drives</li> <li>let device start by the flashed drivers</li> </ul>"},{"location":"Learning/CS/OS/Ubuntu/configs/#wsl","title":"Wsl","text":"<ul> <li>in Microsoft Store download <code>wsl</code> and <code>ubuntu 22</code></li> </ul>"},{"location":"Learning/CS/OS/Ubuntu/configs/#connection","title":"Connection","text":"<p>connect by vscode or gateway,wsl mode or ssh</p>"},{"location":"Learning/CS/OS/Ubuntu/configs/#wsl_1","title":"Wsl","text":"<p>before connection</p> <p>remember to set default user as root for more power set root optional: if docker installed ,set default wsl distro as ubuntu 22 by set default distro</p>"},{"location":"Learning/CS/OS/Ubuntu/configs/#native-ubuntu","title":"Native Ubuntu","text":"<p>upgrade power</p> <ol> <li>add into <code>sudo</code> group</li> </ol> <pre><code>sudo usermod -aG sudo yourusername\n# check it\ngroups yourusername\n</code></pre> <ol> <li>avoid be asked input passwd call <code>sudo</code> every time</li> </ol> <pre><code>sudo visudo\n# fine the line begin with %sudo and replace it\n%sudo ALL=(ALL) NOPASSWD: ALL\n</code></pre> <p>ssh connect by ssh ,enter password first time and try to connect by ssh-key</p>"},{"location":"Learning/CS/OS/Ubuntu/configs/#initialization","title":"Initialization","text":""},{"location":"Learning/CS/OS/Ubuntu/configs/#set-proxies","title":"Set Proxies","text":"<p>before any download from web, set proxies first for too slow speed</p>"},{"location":"Learning/CS/OS/Ubuntu/configs/#wsl_2","title":"Wsl","text":"<p>proxy</p> <ol> <li>set shared proxies first!!</li> </ol>"},{"location":"Learning/CS/OS/Ubuntu/configs/#native-ubuntu_1","title":"Native Ubuntu","text":"<ol> <li>run clash itself by clash</li> <li>or in the same subnet ,share your clash proxy by open allow lan</li> </ol>"},{"location":"Learning/CS/OS/Ubuntu/configs/#basic-web-tools","title":"Basic Web Tools","text":"<pre><code>sudo apt update\nsudo apt upgrade\nsudo apt install net-tools\nsudo apt install curl\nsudo apt-get update\nsudo apt-get install unzip\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/configs/#shell","title":"Shell","text":"<ol> <li>install <code>zsh</code> for friendly development experience zsh</li> <li>set auto read envs auto read env</li> </ol>"},{"location":"Learning/CS/OS/Ubuntu/configs/#code-envs","title":"Code Envs","text":"<p>code_env</p> <ul> <li>python, conda ,pip, poetry ,cmake\u2026</li> </ul>"},{"location":"Learning/CS/OS/Ubuntu/net/","title":"Net","text":""},{"location":"Learning/CS/OS/Ubuntu/net/#net_1","title":"Net","text":"<p>before ssh connect,u maybe connect by gui or connect by password</p>"},{"location":"Learning/CS/OS/Ubuntu/net/#install-ssh","title":"Install Ssh","text":"<ul> <li>install and start</li> </ul> <pre><code>sudo apt update\nsudo apt install openssh-server\n# add it into ~/.bashrc for auto start\nsudo service ssh start\n</code></pre> <ul> <li>make sure <code>sshd_config</code></li> </ul> <pre><code>sudo nano /etc/ssh/sshd_config\n# make sure\nPubkeyAuthentication yes\n# after connect by keys\nPasswordAuthentication no\nPermitRootLogin yes\n</code></pre> <ul> <li>generate ssh-pub-key in local machine</li> </ul> <pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n# select one of it\nssh-keygen -t ed25519 -C \"1831768457@qq.com\"\n</code></pre> <ul> <li>add ssh-pub-key</li> </ul> <pre><code>mkdir -p ~/.ssh\nchmod 700 ~/.ssh\nnano ~/.ssh/authorized_keys\n</code></pre> <ul> <li>set correct permission</li> </ul> <pre><code>chmod 600 ~/.ssh/authorized_keys\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/net/#clash","title":"Clash","text":"<p>GitHub - Elegycloud/clash-for-linux-backup: Linux\u6700\u5b8c\u6574\u7684Clash for Linux\u7684\u5907\u4efd\u4ed3\u5e93\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\uff01\u7531Yizuko\u8fdb\u884c\u4fee\u590d\u53ca\u7ef4\u62a4 or GitHub - LaoYutang/clash-and-dashboard: clash-dashboard\u7684\u4fee\u6539\u7248\uff0c\u4e0eclash\u4e00\u8d77\u6253\u5305\u6210docker\u955c\u50cf</p> <ul> <li>add config</li> </ul> <pre><code>sudo mkdir ~/.config/clash\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nwget https://raw.githubusercontent.com/SupaVision/DocHub/main/docs/tools/clash.yaml -O /root/.config/clash/config.yaml\n=======\nwget https://raw.githubusercontent.com/SupaVision/DocHub/main/docs/tools/clash.yaml -O ~/.config/clash/config.yaml\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; origin/main\n</code></pre> <ul> <li>run</li> </ul> <pre><code>docker run -d \\\n  --name clash \\\n  --restart=always \\\n  --log-opt max-size=1m \\\n  -v ~/.config/clash/config.yaml:/root/.config/clash/config.yaml \\\n  -p 7888:8080 -p 7890:7890 \\\n  laoyutang/clash-and-dashboard:latest\n</code></pre> <ul> <li>remember set proxy in <code>/etc/environment</code></li> </ul> <pre><code>nano /etc/environment\n</code></pre> <ul> <li>add the following</li> </ul> <pre><code>http_proxy=\"http://127.0.0.1:7890\"\nhttps_proxy=\"http://127.0.0.1:7890\"\nftp_proxy=\"ftp://127.0.0.1:7890\"\nno_proxy=\"localhost,127.0.0.1,::1\"\n</code></pre> <ul> <li>apply changes</li> </ul> <pre><code>source /etc/environment\n</code></pre> <ul> <li>test connection</li> </ul> <pre><code>curl https://www.google.com\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/net/#nat","title":"NAT","text":"<ul> <li>get download command in \u82b1\u751f\u58f3\u5ba2\u6237\u7aef\u5b98\u65b9\u4e0b\u8f7d - \u8d1d\u9510\u82b1\u751f\u58f3\u5b98\u7f51</li> <li>tutorial in Linux\u7248\u4f7f\u7528\u6559\u7a0b-\u8d1d\u9510\u5b98\u7f51</li> </ul> <p>successful example ubuntu 22,(X86_64)</p> <pre><code>cd /home/atticuszz/downloads\n# download commands\nwget \"https://dl.oray.com/hsk/linux/phddns_5.3.0_amd64.deb\" -O phddns_5.3.0_amd64.deb\n# install\ndpkg -i phddns_5.3.0_amd64.deb\n# auto start\nphddns enable\n# get\n +--------------------------------------------------+\n |          Oray PeanutHull Linux 5.3.0             |\n +--------------------------------------------------+\n |              Runstatus: ONLINE                   |\n +--------------------------------------------------+\n |              SN: orayec00470c5af6                |\n +--------------------------------------------------+\n |    Remote Management Address http://b.oray.com   |\n +--------------------------------------------------+\n</code></pre> <ul> <li>login \u8d1d\u9510\u82b1\u751f\u58f3\u7ba1\u7406 by <code>orayec00470c5af6</code> and <code>admin</code></li> <li>add map in Site</li> </ul>"},{"location":"Learning/CS/OS/Ubuntu/net/#access-port","title":"Access Port","text":"<ul> <li>set local port forwarding in <code>Termius</code></li> <li></li> </ul> <p>Backlinks:</p>"},{"location":"Learning/CS/OS/Ubuntu/shell/","title":"Shell","text":""},{"location":"Learning/CS/OS/Ubuntu/shell/#auto-read-envs","title":"Auto Read Envs","text":"<p>make ur bash auto read envs from shells like bash,zsh and Centralize it for easier management</p> <ul> <li>for origin bash   bash is the basic shell in linux</li> </ul> <pre><code>nano /etc/bash.bashrc\n# add following\nset -a\n. /etc/environment\nset +a\n# note it's run in new session,instead of in /etc/bash.bashrc\nsource /etc/bash.bashrc\n</code></pre> <ul> <li>for zsh   zsh is the enhanced and popular shell</li> </ul> <pre><code>nano ~/.zshrc\nset -a\n. /etc/environment\nset +a\nsource ~/.zshrc\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/shell/#add-envs-to-etcenvironment","title":"Add Envs to <code>/etc/environment</code>","text":"<pre><code>echo 'MY_ENV_VAR=\"my_value\"' | sudo tee -a /etc/environment &gt; /dev/null\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/shell/#install-zsh","title":"Install Zsh","text":"<p>see yellow hints  ZSH + Oh My ZSH! on Windows with WSL - DEV Community</p> <ol> <li>install zsh</li> </ol> <pre><code>sudo apt install zsh\n# install oh my zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> <ol> <li>install front,GitHub - romkatv/powerlevel10k: A Zsh theme,select one of <code>.ttf</code> download and move it into <code>~/.front</code></li> </ol> <pre><code>sudo apt install fontconfig\nfc-cache -fv\n</code></pre> <ol> <li>install theme</li> </ol> <pre><code>git clone https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k\n</code></pre> <ul> <li>add theme config <code>~/.zshrc</code>,then remember to source it</li> </ul> <pre><code># correct the old ZSH_THEME or can not find p10k command\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(history)\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=1\n\nexport LS_COLORS=\"rs=0:no=00:mi=00:mh=00:ln=01;36:or=01;31:di=01;34:ow=04;01;34:st=34:tw=04;34:pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32:\"\n</code></pre> <ol> <li>restart terminal and config themes</li> </ol> <pre><code>p10k configure\n</code></pre> <ol> <li>install plugins</li> </ol> <pre><code>git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\ngit clone https://github.com/Pilaton/OhMyZsh-full-autoupdate.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/ohmyzsh-full-autoupdate\n</code></pre> <ul> <li>add plugins config   must add the following before the <code>source $ZSH/oh-my-zsh.sh</code></li> </ul> <pre><code>ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor root line)\nZSH_HIGHLIGHT_PATTERNS=('rm -rf *' 'fg=white,bold,bg=red')\n\nplugins=(\n    command-not-found\n    extract\n    deno\n    docker\n    git\n    github\n    gitignore\n    history-substring-search\n    node\n    npm\n    nvm\n    yarn\n    volta\n    vscode\n    sudo\n    web-search\n    z\n    zsh-autosuggestions\n    zsh-syntax-highlighting\n    ohmyzsh-full-autoupdate\n)\n</code></pre> <ol> <li>vs code terminal , Add these properties to the user\u00a0<code>setttings.json</code></li> </ol> <pre><code>{\n  \"terminal.integrated.fontSize\": 12,\n  \"terminal.integrated.shellIntegration.enabled\": true,\n  \"terminal.integrated.defaultProfile.windows\": \"Git Bash\",\n  \"terminal.integrated.defaultProfile.linux\": \"zsh\"\n}\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/","title":"System","text":""},{"location":"Learning/CS/OS/Ubuntu/system/#system_1","title":"System","text":""},{"location":"Learning/CS/OS/Ubuntu/system/#ignore-lid-switch","title":"Ignore Lid Switch","text":"<pre><code>sudo nano /etc/systemd/logind.conf\n# make sure\nHandleLidSwitch=ignore\nHandleLidSwitchExternalPower=ignore\nHandleLidSwitchDocked=ignore\n# then run\nsudo systemctl restart systemd-logind\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#gui","title":"Gui","text":"<p>no test</p> <pre><code>sudo apt update\nsudo apt full-upgrade\nsudo apt install --no-install-recommends xserver-xorg\nsudo apt install --no-install-recommends xinit\nsudo apt install raspberrypi-ui-mods\nsudo apt install --no-install-recommends lightdm\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#qt","title":"Qt","text":"<pre><code>sudo apt-get update\nsudo apt-get install qtbase5-dev\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#change-password","title":"Change Password","text":"<pre><code># admin\nwsl -u root\npasswd %username% # empty for root\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#upgrade-to-root","title":"Upgrade to Root","text":"<pre><code>usermod -aG sudo %username%\nsudo chown -R %username%  %filepath%\n# sudo chown -R atticuszz /etc/\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#basic-tools-for-desktop","title":"Basic Tools for Desktop","text":""},{"location":"Learning/CS/OS/Ubuntu/system/#use-eye-protection-mode","title":"Use Eye Protection Mode","text":"<p>setting-&gt; display-&gt; night light</p>"},{"location":"Learning/CS/OS/Ubuntu/system/#snap-shop-update","title":"Snap Shop Update","text":"<pre><code>sudo snap refresh snap-store\nsudo snap refresh\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#keyboard","title":"Keyboard","text":"<pre><code>sudo apt-get update\nsudo apt-get install ibus ibus-pinyin ibus-libpinyin\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#system-backup","title":"System Backup","text":"<pre><code>sudo apt-get update\nsudo apt-get install timeshift\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#clipboard","title":"Clipboard","text":"<pre><code>sudo apt update\nsudo apt install copyQ\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#gpu-monitor","title":"Gpu Monitor","text":"<pre><code>conda install -c conda-forge nvitop\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#fan-mode","title":"Fan Mode","text":"<p>use <code>Legion</code> in windows to set mode</p>"},{"location":"Learning/CS/OS/Ubuntu/system/#screenshot","title":"Screenshot","text":"<p>Snipaste Downloads</p> <pre><code>sudo apt-get update\nsudo apt-get install fuse\nchmod +x /home/atticuszz/Downloads/Snipaste-2.8.9-Beta-x86_64.AppImage\n/home/atticuszz/Downloads/Snipaste-2.8.9-Beta-x86_64.AppImage --appimage-extract\n# create desktop app then\nmkdir -p ~/.config/autostart/\ncp ~/Desktop/Snipaste.desktop ~/.config/autostart/\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#install-targz","title":"Install .tar.gz","text":"<pre><code>tar -xzf filepath\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#apt-source-change","title":"Apt Source Change","text":"<pre><code>sudo nano /etc/apt/sources.list\nsudo apt update\nsudo apt upgrade\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#flathub","title":"Flathub","text":"<p>Ubuntu Flathub Setup | Flathub</p>"},{"location":"Learning/CS/OS/Ubuntu/system/#linux-system-optimizer-monitoring","title":"Linux System Optimizer &amp; Monitoring","text":"<pre><code>flatpak install flathub net.nokyan.Resources\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#dual-system-extend-disk-for-ubuntu","title":"Dual System Extend Disk for Ubuntu","text":"<p>Windows + Linux(Ubuntu)\u53cc\u7cfb\u7edf\u6269\u5c55Linux\u78c1\u76d8\u7a7a\u95f4_\u53cc\u7cfb\u7edf\u4e0b windows \u4e3a ubuntu \u6269\u5145\u65b0\u7a7a\u95f4 | linux \u6269\u5bb9\u539f\u7406\u4ecb\u7ecd + \u586b\u5751-CSDN\u535a\u5ba2</p>"},{"location":"Learning/CS/OS/Ubuntu/system/#increase-swap-space-via-swap-file","title":"Increase Swap Space via Swap File","text":"<p>extend to 16gb for example How to increase swap space? - Ask Ubuntu</p> <p>extend to 16gb for example</p> <pre><code>sudo swapoff -a\nsudo fallocate -l 16G /swapfile\n# if failed fallocate try\nsudo dd if=/dev/zero of=/swapfile bs=1G count=16\n\n# then\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\n\n# Make it permanent\necho '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab\n# test it\nswapon --show\n-&gt;\n\u276f swapon --show\n\nNAME      TYPE SIZE USED PRIO\n/swapfile file  16G   0B   -2\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/system/#zip-file","title":"Zip File","text":"<p>Note:</p> <ul> <li>The <code>-r</code> option stands for \"recursive\" and tells <code>zip</code> to include all files and <code>subfolders</code> in the specified folder.</li> <li>If you want to exclude certain files or folders, you can use the <code>-x</code> option followed by the file or folder name. For example:</li> </ul> <pre><code>zip -r myfolder.zip myfolder -x myfolder/excluded_file.txt\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/","title":"Wsl","text":""},{"location":"Learning/CS/OS/Ubuntu/wsl/#set-default-user-as-root","title":"Set Default User as Root","text":"<pre><code>sudo nano /etc/wsl.conf\n# add following\n[user]\ndefault=root\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#set-default-distro","title":"Set Default Distro","text":"<ol> <li>enter wsl distro</li> </ol> <pre><code>wsl -l\n-&gt; wsl distro,such as Ubuntu-22.04\nwsl -d &lt;wsl distro&gt;\n</code></pre> <ol> <li>set default wsl distro</li> </ol> <pre><code>wsl --set-default &lt;wsl distro&gt;\n</code></pre> <ul> <li>then</li> </ul> <pre><code>wsl --shutdown\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#proxy","title":"Proxy","text":"<p>WSL2 \u7f51\u7edc\u7684\u6700\u7ec8\u89e3\u51b3\u65b9\u6848 - \u77e5\u4e4e Advanced settings configuration in WSL | Microsoft Learn</p> <p>set .wslconfig to enable share proxy</p> <p>\ud83d\ude0abest one for latest wsl</p> <ol> <li>in your <code>C:\\Users\\&lt;username&gt;</code> create <code>.wslconfig</code></li> </ol> <p>if existed,open it by ps</p> <pre><code>notepad $env:USERPROFILE\\.wslconfig\n</code></pre> <pre><code>[wsl2]\nautoProxy=true\nnetworkingMode=mirrored\nfirewall=true\n</code></pre> <ol> <li>restart wsl</li> </ol> <pre><code>wsl --shutdown\nwsl\n</code></pre> <p>shell for auto set proxy as wsl start</p> <p>set proxies manually and try set auto start with sh</p> <ol> <li>enable systemd</li> </ol> <pre><code>sudo nano /etc/wsl.conf\n\n# add it\n[boot]\nsystemd=true\n</code></pre> <ol> <li>add wget .sh for auto start with set proxies</li> </ol> <pre><code># \u4f7f\u7528wget\u4e0b\u8f7d\u811a\u672c\nwget -O /tmp/set_proxy_as_start_up.sh https://raw.githubusercontent.com/Atticuszz/PyGizmoKit/main/scripts/set_proxy_as_start_up.sh\n\n# \u7ed9\u811a\u672c\u6267\u884c\u6743\u9650\nchmod +x /tmp/set_proxy_as_start_up.sh\n\n# \u6267\u884c\u811a\u672c\nsudo /tmp/set_proxy_as_start_up.sh\n</code></pre> <p>set proxies manually, connect to your clash proxy old way</p> <pre><code>sudo nano /etc/environment\n</code></pre> <ul> <li>check clash proxy of <code>allow lan</code> wifi <code>ipv4</code></li> </ul> <pre><code># add following\nhttp_proxy=\"http://192.168.0.107:7890\"\nhttps_proxy=\"http://192.168.0.107:7890\"\nftp_proxy=\"ftp://192.168.0.107:7890\"\nno_proxy=\"localhost,127.0.0.1,::1\"\n</code></pre> <ul> <li>apply changes</li> </ul> <pre><code>source /etc/environment\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#share-wsl-port-in-lan","title":"Share Wsl Port in LAN","text":"<p>Accessing network applications with WSL | Microsoft Learn</p> <p>use NAT mode works for me</p> <ol> <li>find <code>wsl ip</code> relative to windows</li> </ol> <pre><code> wsl hostname -I\n</code></pre> <p></p> <ol> <li>enable port bind    <code>wsl-ip</code> = <code>192.168.245.116</code>    port bind = 5000:5000</li> </ol> <pre><code>netsh interface portproxy add v4tov4 listenport=5000 listenaddress=0.0.0.0 connectport=5000 connectaddress=192.168.245.116\n</code></pre> <ol> <li>access port via wifi ipv4,you can see it in clash or run <code>ipconfig</code></li> </ol>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#install-wsl-linux-kernel-to-enable-access-to-usb-device","title":"Install Wsl-linux Kernel to Enable Access to Usb Device","text":"<p>WSL/Connect USB devices/USB Camera.md at main \u00b7 phuoctan4141/WSL \u00b7 GitHub update from WSL support \u00b7 dorssel/usbipd-win Wiki \u00b7 GitHub</p>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#download-kernel","title":"Download Kernel","text":"<ol> <li>update to latest wsl</li> </ol> <pre><code>wsl --update\n</code></pre> <ol> <li>check your version</li> </ol> <pre><code>uname -r\n-&gt; 5.15.133.1-microsoft-standard-WSL2\n</code></pre> <ol> <li>select Releases \u00b7 microsoft/WSL2-Linux-Kernel to download via <code>wget</code> into any dir such <code>/usr/src/</code></li> </ol> <pre><code>cd /usr/src/\nwget https://github.com/microsoft/WSL2-Linux-Kernel/archive/refs/tags/linux-msft-wsl-5.15.133.1.zip\nunzip linux-msft-wsl-5.15.133.1.zip\n# to see which folder to cd\nls\n-&gt; WSL2-Linux-Kernel-linux-msft-wsl-5.15.133.1\ncd WSL2-Linux-Kernel-linux-msft-wsl-5.15.133.1\n</code></pre> <ol> <li>Copy current configuration file.</li> </ol> <pre><code>sudo cp /proc/config.gz config.gz\nsudo gunzip config.gz\nsudo mv config .config\n</code></pre> <p>You may need to set <code>CONFIG_USB=y</code> in <code>.config</code> prior to running <code>menuconfig</code>to get all options enabled for selection. use <code>nano</code> to check it</p>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#config-kernel","title":"Config Kernel","text":"<p>Select different modules according to your own needs. (Press space to select or deselect.)</p> <ol> <li>Run <code>menuconfig</code> to select kernel features to add.</li> </ol> <pre><code>sudo make menuconfig\n</code></pre> <p>all in device driver menu 2. These are the necessary additional features in <code>menuconfig</code>.</p> <pre><code>Device Drivers-&gt;USB support[*]\nDevice Drivers-&gt;USB support-&gt;Support for Host-side USB[M]\nDevice Drivers-&gt;USB support-&gt;Enable USB persist by default[*]\nDevice Drivers-&gt;USB support-&gt;USB Modem (CDC ACM) support[M]\nDevice Drivers-&gt;USB support-&gt;USB Mass Storage support[M]\nDevice Drivers-&gt;USB support-&gt;USB/IP support[M]\nDevice Drivers-&gt;USB support-&gt;VHCI hcd[M]\nDevice Drivers-&gt;USB support-&gt;VHCI hcd-&gt;Number of ports per USB/IP virtual host controller(8)\nDevice Drivers-&gt;USB support-&gt;Number of USB/IP virtual host controllers(1)\nDevice Drivers-&gt;USB support-&gt;USB Serial Converter support[M]\nDevice Drivers-&gt;USB support-&gt;USB Serial Converter support-&gt;USB FTDI Single Port Serial Driver[M]\nDevice Drivers-&gt;USB support-&gt;USB Physical Layer drivers-&gt;NOP USB Transceiver Driver[M]\nDevice Drivers-&gt;Network device support-&gt;USB Network Adapters[M]\nDevice Drivers-&gt;Network device support-&gt;USB Network Adapters-&gt;[Deselect everything you dont care about]\nDevice Drivers-&gt;Network device support-&gt;USB Network Adapters-&gt;Multi-purpose USB Networking Framework[M]\nDevice Drivers-&gt;Network device support-&gt;USB Network Adapters-&gt;CDC Ethernet support (smart devices such as cable modems)[M]\nDevice Drivers-&gt;Network device support-&gt;USB Network Adapters-&gt;Host for RNDIS and ActiveSync devices[M]\n</code></pre> <ol> <li>These are additional features required for the camera.</li> </ol> <pre><code>Device Drivers-&gt;Multimedia support[M]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Filter media drivers[*]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Auto ancillary drivers[*]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Media device types-&gt;Camera and video grabbers[*]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Video4Linux options-&gt;V4L2 sub-device userspace API[*]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Media drivers-&gt;Media USB Adapters[*]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Media drivers-&gt;Media USB Adapters[*]-&gt;USB Video Class(UVC)[M]\nDevice Drivers-&gt;Multimedia support[M]-&gt;Media drivers-&gt;Media USB Adapters[*]-&gt;UVC input evnets device support[*]\n</code></pre> <p>\u26a0\ufe0f\u00a0These instructions have changed. Previously, it was recommended to enable \"Debug messages for USB/IP\". However, debug messages have a huge negative performance impact on bulk transfers. Enabling debug messages is no longer recommended.</p>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#compile-and-build","title":"Compile and Build","text":"<p>In the following command the number '16' is the number of cores to use; run <code>getconf _NPROCESSORS_ONLN</code> to find the number of cores.</p> <ol> <li>compile kernel</li> </ol> <pre><code>sudo make -j 16 &amp;&amp; sudo make modules_install -j 16 &amp;&amp; sudo make install -j 16\n</code></pre> <ol> <li>Build USB/IP tools.</li> </ol> <pre><code>cd tools/usb/usbip\nsudo ./autogen.sh\nsudo ./configure\nsudo make install -j 16\n</code></pre> <ol> <li>Copy tools libraries location so usbip tools can get them.</li> </ol> <pre><code>sudo cp libsrc/.libs/libusbip.so.0 /lib/libusbip.so.0\n</code></pre> <ol> <li>Install usb.ids so you have names displayed for usb devices.</li> </ol> <pre><code>sudo apt install linux-tools-virtual hwdata\n</code></pre> <ol> <li>From the root path of the repo that you cloned, copy the image.</li> </ol> <pre><code>cp arch/x86/boot/bzImage /mnt/c/Users/&lt;username&gt;/usbip-bzImage\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#config-wsl","title":"Config Wsl","text":"<p>Create a\u00a0<code>.wslconfig</code>\u00a0file on\u00a0<code>/mnt/c/Users/&lt;username&gt;/</code>\u00a0and add a reference to the created image with the following.</p> <pre><code>[wsl2]\nkernel=c:\\\\users\\\\&lt;username&gt;\\\\usbip-bzImage\n</code></pre> <p>then remember to restart wsl</p>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#bind-usb-device","title":"Bind Usb Device","text":"<p>Connect USB devices | Microsoft Learn</p> <p><code>usbipd</code> download from Releases \u00b7 dorssel/usbipd-win</p> <p>From an administrator Powershell on Windows, run this command. It will list all the USB devices connected to Windows.</p> <ol> <li>find usb device</li> </ol> <pre><code>usbipd list\n</code></pre> <p>i have two camera now, 2-1 and 2-7 </p> <ol> <li> <p>bind and attach device</p> <p>unattached occasionally, remember to <code>sudo chmod 777 /dev/video0</code></p> </li> </ol> <pre><code>usbipd bind --busid 2-1\nusbipd attach --wsl --busid 2-1\nusbipd bind --busid 2-7\nusbipd attach --wsl --busid 2-7\n</code></pre> <ol> <li>check in wsl</li> </ol> <pre><code>sudo usbip list --remote=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}')\n</code></pre> <p></p> <p>it shows that connect two devices successful</p> <ul> <li>the following in is optional, if get none before, run it</li> </ul> <pre><code>sudo usbip attach --remote=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}') --busid=2-1\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#test-device","title":"Test Device","text":"<p>At this moment, it can be found that it has appeared and can be tested with\u00a0<code>/dev/video0</code></p> <pre><code> sudo apt update\nsudo apt install guvcview\nsudo apt install v4l-utils\n</code></pre> <ol> <li>Examine device access.</li> </ol> <pre><code>v4l2-ctl --list-devices\n</code></pre> <p>2. Show webcamera information</p> <pre><code>v4l2-ctl -d /dev/video0 --all\nv4l2-ctl -d /dev/video0 --list-formats-ext\n</code></pre> <ol> <li>Allow access by using</li> </ol> <pre><code>sudo chmod 777 /dev/video0\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#test-by-gui","title":"Test by Gui","text":"<pre><code>guvcview\n</code></pre>"},{"location":"Learning/CS/OS/Ubuntu/wsl/#push-to-github-via-ssh","title":"Push to Github via Ssh","text":"<p>\u89e3\u51b3\u5728 wsl \u4e2d\u666e\u901a\u7684\u7f51\u9875\u4ee4\u724c\u8ba4\u8bc1\uff0c\u63a8\u9001\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u6743\u9650\u95ee\u9898\uff0c\u4f7f\u7528 ssh \u914d https \u8f6c\u53d1\u89e3\u51b3\u63a8\u9001\u7684\u8eab\u4efd\u9a8c\u8bc1\u95ee\u9898</p> <p>git ssh \u547d\u4ee4\u8be6\u89c1 SSH\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b</p> <ol> <li>\u6dfb\u52a0 SSH \u5bc6\u94a5</li> </ol> <p>\u9996\u5148\uff0c\u5c06 SSH \u79c1\u94a5\u6dfb\u52a0\u5230 wsl \u4e2d,\u5728 bash \u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <p>```powershell/bash ssh-keygen -t ed25519 -C \"1831768457@qq.com\" <pre><code>\u8bf7\u786e\u4fdd\u5c06 `1831768457@qq.com` \u90ae\u7bb1\u66ff\u6362\u4e3a\u4f60 GitHub \u8d26\u6237\u7684\u5b9e\u9645\u90ae\u7bb1\u3002\n\n\u7528 vscode \u8fde\u63a5 wsl \u8bbf\u95ee\u6587\u4ef6 `cat /root/.ssh/id_ed25519.pub` \u6216\u4f7f\u7528\u547d\u4ee4\u884c\n\n```bash\ncat /root/.ssh/id_ed25519.pub\n</code></pre></p> <p>\u5728 GitHub \u4e2d\u6dfb\u52a0 ssh \u5bc6\u5319   \u6dfb\u52a0 <code>id_ed25519.pub</code> \u7684\u5185\u5bb9\u5230 2 \u7684\u6846\u4e2d</p> <ol> <li>\u901a\u8fc7 HTTPS \u6d4b\u8bd5 SSH \u8fde\u63a5</li> </ol> <p>GitHub \u652f\u6301\u901a\u8fc7 HTTPS \u7aef\u53e3 443 \u8fdb\u884c SSH \u8fde\u63a5\u3002\u8fd9\u5bf9\u4e8e\u5728\u67d0\u4e9b\u7f51\u7edc\u73af\u5883\u4e0b\uff0c\u6807\u51c6 SSH \u7aef\u53e3 22 \u88ab\u963b\u585e\u7684\u60c5\u51b5\u7279\u522b\u6709\u7528\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6d4b\u8bd5 SSH \u8fde\u63a5\uff1a</p> <pre><code>ssh -T -p 443 git@ssh.github.com\n</code></pre> <p>\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8fde\u63a5\u5230 GitHub \u670d\u52a1\u5668\uff0c\u53ef\u80fd\u4f1a\u63d0\u793a\u60a8\u786e\u8ba4\u670d\u52a1\u5668\u7684\u8eab\u4efd\u3002\u8f93\u5165 <code>yes</code> \u4ee5\u7ee7\u7eed\u3002</p> <ol> <li>\u914d\u7f6e SSH</li> </ol> <p>\u4e3a\u4e86\u4f7f SSH \u8fde\u63a5\u81ea\u52a8\u4f7f\u7528 HTTPS \u7aef\u53e3\uff0c\u9700\u8981\u914d\u7f6e SSH \u5ba2\u6237\u7aef\u3002\u8fd9\u6d89\u53ca\u5230\u7f16\u8f91 <code>~/.ssh/config</code> \u6587\u4ef6\uff08\u5728 Linux \u6216 WSL \u4e2d\uff09\u6216 <code>C:\\Users\\\u60a8\u7684\u7528\u6237\u540d\\.ssh\\config</code> \u6587\u4ef6\uff08\u5728 Windows \u4e2d\uff09\u3002</p> <p>\u9996\u5148\uff0c\u4f7f\u7528 nano \u7f16\u8f91\u5668\uff08\u6216\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u6587\u672c\u7f16\u8f91\u5668\uff09\u6253\u5f00\u6216\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\uff1a</p> <pre><code>nano ~/.ssh/config\n</code></pre> <p>\u7136\u540e\uff0c\u5c06\u4ee5\u4e0b\u5185\u5bb9\u6dfb\u52a0\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a</p> <pre><code>Host github.com\n    Hostname ssh.github.com\n    Port 443\n    User git\n</code></pre> <p>\u8fd9\u544a\u8bc9 SSH \u5ba2\u6237\u7aef\uff0c\u5f53\u5c1d\u8bd5\u8fde\u63a5\u5230 <code>github.com</code> \u65f6\uff0c\u5e94\u8be5\u4f7f\u7528 <code>ssh.github.com</code> \u4f5c\u4e3a\u4e3b\u673a\u540d\uff0c\u5e76\u901a\u8fc7\u7aef\u53e3 443 \u8fdb\u884c\u8fde\u63a5\u3002</p> <ol> <li>\u6d4b\u8bd5 SSH \u8fde\u63a5</li> </ol> <p>\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u60a8\u5e94\u8be5\u6d4b\u8bd5 SSH \u8fde\u63a5\u4ee5\u786e\u4fdd\u4e00\u5207\u5de5\u4f5c\u6b63\u5e38\uff1a</p> <pre><code>ssh -T git@github.com\n</code></pre> <p>\u5982\u679c\u914d\u7f6e\u6b63\u786e\uff0cGitHub \u4f1a\u901a\u8fc7 SSH \u54cd\u5e94\u60a8\u7684\u7528\u6237\u540d\uff0c\u8868\u793a\u60a8\u5df2\u6210\u529f\u8bbe\u7f6e SSH \u8fde\u63a5\u3002</p> <ol> <li>\u5c1d\u8bd5\u63d0\u4ea4</li> </ol> <p>\u4f7f\u7528 ssh \u514b\u9686\u4ed3\u5e93</p> <pre><code>git clone git@github.com:SupaVision/AutoDrive_backend.git\n</code></pre> <p>\u4f7f\u7528 gateway \u7684 pycharm \u8fde\u63a5 wsl\uff0c\u5bf9\u4ed3\u5e93\u4e2d\u7684\u67d0\u4e2a\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca\u6309 Ctrl+K\uff0c\u70b9\u51fb commit and push\uff0c\u5c1d\u8bd5\u63d0\u4ea4\uff0c\u5982\u679c\u63d0\u4ea4\u6210\u529f\uff0c\u8bf4\u660e\u914d\u7f6e\u6b63\u5e38\uff0c\u53ef\u4ee5\u8fdb\u884c\u6109\u5feb\u7684\u4ee3\u7801\u534f\u4f5c\u5566</p> <p>Backlinks:</p>"},{"location":"Learning/CS/OS/Windows/CMD/","title":"CMD","text":"<ul> <li>\u6253\u5f00\u65b9\u5f0f   win+r,\u5f39\u51fa\u7684\u7a97\u53e3\u8f93\u5165 cmd None \u8fd9\u79cd\u65b9\u5f0f\u662f\u57fa\u4e8e window \u7cfb\u7edf\u4e2a\u4eba\u7528\u6237\u6587\u4ef6\u5939\u7684\u8def\u5f84\u4e0b\u7684 None</li> <li>\u6307\u5b9a\u8def\u5f84</li> <li>cd \u547d\u4ee4\u6307\u5b9a\u547d\u4ee4\u884c\u6267\u884c\u7684\u8def\u5f84\uff0c\u7ed9\u51fa\u4e0b\u4e00\u4e2a\u76ee\u5f55\u6216\u8005\u5b8c\u6574\u8def\u5f84None</li> <li>\u5728\u8d44\u6e90\u7ba1\u7406\u5668\u94fe\u63a5\u680f\u8f93\u5165 cmd \u6216\u8005 powershell \u4e4b\u7c7b\u7684\u547d\u4ee4None</li> <li>win11 \u7279\u6709\u7279\u6027 \u53f3\u51fb\u4e00\u6b21\u6216\u8005\u4e24\u6b21\u51fa\u73b0 cmd \u9009\u9879None</li> </ul>"},{"location":"Learning/CS/OS/Windows/Powersehll/","title":"Powersehll","text":""},{"location":"Learning/CS/OS/Windows/Powersehll/#kill-the-process-by-pid","title":"kill The Process by PID","text":"<pre><code>taskkill /PID &lt;PID&gt; /F\n</code></pre>"},{"location":"Learning/CS/OS/Windows/Powersehll/#find-out-the-process-occupied-the-port","title":"Find out the Process Occupied the port","text":"<p>the last line of output is PID</p> <pre><code>netstat -ano | findstr :&lt;port&gt;\n</code></pre>"},{"location":"Learning/CS/OS/Windows/Powersehll/#find-out-the-process-occupied-the-file","title":"Find out the Process Occupied the file","text":"<p>Sysinternals Suite - Microsoft Apps</p> <pre><code>handle.exe &lt;file path&gt;\n</code></pre>"},{"location":"Learning/CS/OS/Windows/Powersehll/#get-command-exe-path","title":"Get Command .exe Path","text":"<pre><code>(Get-Command poetry).Source\n</code></pre> <p><code>-&gt;C:\\Users\\18317\\AppData\\Roaming\\Python\\Scripts\\poetry.exe</code></p>"},{"location":"Learning/CS/OS/Windows/Powersehll/#add-path","title":"Add Path","text":"<p>admin</p> <pre><code># \u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u8def\u5f84\n$currentPath = [Environment]::GetEnvironmentVariable(\"Path\", [System.EnvironmentVariableTarget]::Machine)\n\n# \u8981\u6dfb\u52a0\u7684\u65b0\u8def\u5f84\n$newPath = \"C:\\Program Files\\xpdf-tools-win-4.05\\bin64\"\n\n# \u68c0\u67e5\u65b0\u8def\u5f84\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e\u7cfb\u7edf\u8def\u5f84\u4e2d\nif ($currentPath -notcontains $newPath) {\n    # \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u6dfb\u52a0\u65b0\u8def\u5f84\n    $updatedPath = $currentPath + \";\" + $newPath\n\n    # \u8bbe\u7f6e\u65b0\u7684\u7cfb\u7edf\u8def\u5f84\n    [Environment]::SetEnvironmentVariable(\"Path\", $updatedPath, [System.EnvironmentVariableTarget]::Machine)\n\n    Write-Output \"Path added successfully.\"\n} else {\n    Write-Output \"Path already exists in the system PATH.\"\n}\n# check path\n# \u8f93\u51fa\u5f53\u524d\u7cfb\u7edf\u8def\u5f84\n[Environment]::GetEnvironmentVariable(\"Path\", [System.EnvironmentVariableTarget]::Machine)\n</code></pre>"},{"location":"Learning/CS/OS/Windows/Powersehll/#combine-project-files-such-as-py","title":"Combine Project Files such as .py","text":"<pre><code># \u8bbe\u7f6e\u9700\u8981\u9012\u5f52\u641c\u7d22\u7684\u76ee\u5f55\u8def\u5f84\n$directoryPath = \"C:\\path\\to\\your\\python\\files\"\n\n# \u6307\u5b9a\u5408\u5e76\u540e\u7684\u6587\u4ef6\u540d\u548c\u8def\u5f84\n$combinedFileName = \"combined.py\"\n$combinedFilePath = Join-Path -Path $directoryPath -ChildPath $combinedFileName\n\n# \u521b\u5efa\u6216\u6e05\u7a7a\u4e4b\u524d\u7684\u5408\u5e76\u6587\u4ef6\n\"\" | Out-File -FilePath $combinedFilePath\n\n# \u9012\u5f52\u5730\u83b7\u53d6\u6240\u6709Python\u6587\u4ef6\n$pythonFiles = Get-ChildItem -Path $directoryPath -Filter *.py -Recurse\n\n# \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u6587\u4ef6\u5e76\u8ffd\u52a0\u5230combined.py\nforeach ($file in $pythonFiles) {\n    # \u786e\u4fdd\u4e0d\u5904\u7406\u76ee\u6807\u6587\u4ef6\u672c\u8eab\n    if ($file.FullName -ne $combinedFilePath) {\n        # \u4e3a\u6bcf\u4e2a\u6587\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\u884c\n        (\"# Contents of \" + $file.FullName) | Out-File -FilePath $combinedFilePath -Append\n\n        # \u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9\u5230combined.py\n        Get-Content -Path $file.FullName | Out-File -FilePath $combinedFilePath -Append\n\n        # \u6dfb\u52a0\u6362\u884c\u4ee5\u5206\u9694\u4e0d\u540c\u7684\u6587\u4ef6\u5185\u5bb9\n        \"`n\" | Out-File -FilePath $combinedFilePath -Append\n    }\n}\n\n# \u8f93\u51fa\u7ed3\u679c\u63d0\u793a\nWrite-Host \"All Python files have been combined into $combinedFilePath\"\n</code></pre>"},{"location":"Learning/CS/VCS/git/","title":"Git","text":"<p>Git game in Learn Git Branching</p>"},{"location":"Learning/CS/VCS/git/#init","title":"Init","text":""},{"location":"Learning/CS/VCS/git/#auth","title":"Auth","text":"<pre><code>git config --global user.name \"Atticuszz\"\ngit config --global user.email \"1831768457@qq.com\"\n# \u4ee5\u4e0b\u786e\u4fdd\u5728\u521d\u6b21\u5b89\u88c5\u65f6\u5019\u5e94\u8be5\u6b63\u786e\u7684\u5185\u5bb9\ngit config --global init.defaultBranch main\ngit config credential.helper\n</code></pre>"},{"location":"Learning/CS/VCS/git/#proxy","title":"Proxy","text":""},{"location":"Learning/CS/VCS/git/#httphttps","title":"http\\https","text":"<pre><code># \u4e0eclash\u4e00\u81f4 \u8bbe\u7f6e\ud83d\udc4c win\ngit config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy http://127.0.0.1:7890\n# ubuntu in wsl ip is ipv4 of your win\ngit config --global http.proxy http://192.168.0.107:7890\ngit config --global https.proxy http://192.168.0.107:7890\n</code></pre>"},{"location":"Learning/CS/VCS/git/#ssh","title":"SSH","text":"<p>in admin powershell</p>"},{"location":"Learning/CS/VCS/git/#start-ssh-agent","title":"Start Ssh-agent","text":"<pre><code>Get-Service -Name ssh-agent | Set-Service -StartupType Manual\nStart-Service ssh-agent\n</code></pre>"},{"location":"Learning/CS/VCS/git/#generate-key-pair","title":"Generate Key-pair","text":"<p>```powershell/bash ssh-keygen -t ed25519 -C \"1831768457@qq.com\" <pre><code>_in normal powersehll_\n\n#### Add Ssh-key-pair into Ssh-agent\n\n```powershell\nssh-add C:\\Users\\18317\\.ssh\\id_ed25519\n</code></pre></p> <pre><code>eval $(ssh-agent -s)\nssh-add /root/.ssh/id_ed25519\n</code></pre>"},{"location":"Learning/CS/VCS/git/#copy-id_ed25519pub-into-github_ssh_setting-set-auth-key-type","title":"Copy id_ed25519.pub into github_ssh_setting Set Auth Key Type","text":"<pre><code>cat ~/.ssh/id_ed25519.pub | clip\n</code></pre> <pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre>"},{"location":"Learning/CS/VCS/git/#test-ssh-connect-by-https","title":"Test Ssh Connect by Https","text":"<pre><code>ssh -T -p 443 git@ssh.github.com\n</code></pre>"},{"location":"Learning/CS/VCS/git/#add-config","title":"Add Config","text":"<p>add the following text into <code>~/.ssh/config</code></p> <pre><code>nano ~/.ssh/config\n</code></pre> <p>windows in <code>c:\\user\\your_user_name\\.ssh\\config</code></p> <pre><code>Host github.com\n    Hostname ssh.github.com\n    Port 443\n    User git\n</code></pre>"},{"location":"Learning/CS/VCS/git/#test-test-ssh-connect","title":"Test Test Ssh Connect","text":"<p>you may need to enter yes as it's requiring to trust connection to github</p> <pre><code>ssh -T git@github.com\n</code></pre>"},{"location":"Learning/CS/VCS/git/#usual-commands","title":"Usual Commands","text":""},{"location":"Learning/CS/VCS/git/#reset-http-proxy","title":"Reset Http Proxy","text":"<pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n\ngit config --global --unset core.gitProxy\n\ngit config --local --unset http.proxy\ngit config --local --unset https.proxy\n\ngit config --local --unset core.gitProxy\n\ngit config --global --unset http.\"https://github.com\".proxy\n</code></pre>"},{"location":"Learning/CS/VCS/git/#check-info","title":"Check Info","text":"<pre><code># \u5217\u51fa\u672c\u5730\u914d\u7f6e\ngit config --global --list\n# \u53ea\u5728\u672c\u5730\u4ed3\u5e93\u53ef\u4ee5\ngit config --local --list\n</code></pre>"},{"location":"Learning/CS/VCS/git/#remote","title":"Remote","text":"<ol> <li>list remote repo</li> </ol> <pre><code>git remote -v\n</code></pre> <ol> <li>add remote</li> </ol> <pre><code>git init\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin &lt;remote_repo_URL&gt;\n</code></pre> <ol> <li>associate remote</li> </ol> <pre><code>git push -u origin main\n</code></pre> <ol> <li>set https to ssh</li> </ol> <pre><code>git remote set-url origin &lt;remote_repo_URL&gt;\n</code></pre>"},{"location":"Learning/CS/VCS/git/#remove-track","title":"Remove Track","text":"<pre><code>git rm --cached &lt;file_path_or_folder&gt;\n# if folder add -r\n</code></pre>"},{"location":"Learning/CS/VCS/git/#roll-back","title":"Roll back","text":"<pre><code># force roll back some commit\ngit reset --hard &lt;commit hash&gt;\n# force push remote\ngit push origin main -f\n</code></pre>"},{"location":"Learning/CS/VCS/git/#sync-from-github","title":"Sync from Github","text":"<pre><code>git fetch origin\ngit reset --hard origin/main\ngit clean -fd\n</code></pre>"},{"location":"Learning/CS/VCS/git/#submodule","title":"Submodule","text":"<ol> <li>clone with submodule</li> </ol> <pre><code>git clone --recurse-submodules &lt;repository-url&gt;\n# if forget to with parms --recurse-submodules try following\ngit submodule update --init --recursive\n</code></pre> <ol> <li>add submodule or clone in main as submodule</li> </ol> <pre><code>git submodule add &lt;repository-url&gt; &lt;sub_repo_relative_path_to_root&gt;\n# if no .gitsubmodules appears try it\ngit submodule update --init --recursive\n</code></pre> <ol> <li>remove</li> </ol> <pre><code>rm -rf thirdparty/GS_ICP_SLAM\nrm -rf .git/modules/thirdparty/GS_ICP_SLAM\ngit config --remove-section submodule.thirdparty/GS_ICP_SLAM\n</code></pre>"},{"location":"Learning/CS/VCS/git/#lfs","title":"LFS","text":"<pre><code>git lfs install\ngit lfs track \"*.onnx\"\ngit add .gitattributes\ngit add  \"&lt;file_path&gt;.onnx\"\ngit commit -m \"add extractor model .onnx\"\ngit push origin main\n</code></pre>"},{"location":"Learning/CS/VCS/git/#pre-commit","title":"Pre-commit","text":"<ol> <li>clean cache</li> </ol> <pre><code>pre-commit clean\n</code></pre>"},{"location":"Learning/CS/VCS/git/#mobile","title":"Mobile","text":"<p>https://gist.github.com/Makeshift/43c7ecb3f1c28a623ea4386552712114</p> <p>Backlinks:</p>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/","title":"SSH keypair setup for GitHub","text":"<ul> <li>\u7b80\u5316\u7248 for bash or powershell</li> </ul>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#ssh","title":"SSH","text":"<p>system: win11 in admin powershell</p>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#start-ssh-agent","title":"Start Ssh-agent","text":"<pre><code>Get-Service -Name ssh-agent | Set-Service -StartupType Manual\nStart-Service ssh-agent\n</code></pre>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#generate-key-pair","title":"Generate Key-pair","text":"<pre><code>ssh-keygen -t ed25519 -C \"1831768457@qq.com\"\n</code></pre> <p>in normal powersehll</p>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#add-ssh-key-pair-into-ssh-agent","title":"Add Ssh-key-pair into Ssh-agent","text":"<pre><code>ssh-add C:\\Users\\18317\\.ssh\\id_ed25519\n</code></pre>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#copy-id_ed25519pub-into-github_ssh_setting-set-auth-key-type","title":"Copy id_ed25519.pub into github_ssh_setting Set Auth Key Type","text":"<pre><code>cat ~/.ssh/id_ed25519.pub | clip\n</code></pre>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#test-ssh-connect-by-https","title":"Test Ssh Connect by Https","text":"<pre><code>ssh -T -p 443 git@ssh.github.com\n</code></pre>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#add-config","title":"Add Config","text":"<p>add the following text into <code>~/.ssh/config</code></p> <pre><code>Host github.com\n    Hostname ssh.github.com\n    Port 443\n    User git\n</code></pre>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#test-test-ssh-connect","title":"Test Test Ssh Connect","text":"<p>you may need to enter yes as it's requiring to trust connection to github</p> <pre><code>ssh -T git@github.com\n</code></pre> <p>\u4ee5\u4e0b\u8f6c\u81ea GitHub\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 ssh-agent - GitHub \u6587\u6863</p>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#ssh-ssh-agent","title":"\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 Ssh-agent","text":""},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#_1","title":"\u672c\u6587\u5185\u5bb9","text":"<ul> <li>\u5173\u4e8e SSH \u5bc6\u94a5\u5bc6\u7801</li> <li>\u751f\u6210\u65b0 SSH \u5bc6\u94a5</li> <li>\u5c06 SSH \u5bc6\u94a5\u6dfb\u52a0\u5230 ssh-agent</li> <li>\u4e3a\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5   \u68c0\u67e5\u73b0\u6709 SSH \u5bc6\u94a5\u540e\uff0c\u60a8\u53ef\u4ee5\u751f\u6210\u65b0 SSH \u5bc6\u94a5\u4ee5\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7136\u540e\u5c06\u5176\u6dfb\u52a0\u5230 ssh-agent\u3002</li> </ul>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#platform-navigation","title":"Platform Navigation","text":"<ul> <li>Mac</li> <li>Windows</li> <li>Linux</li> </ul>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#ssh_1","title":"\u5173\u4e8e SSH \u5bc6\u94a5\u5bc6\u7801","text":"<p>\u53ef\u4ee5\u4f7f\u7528 SSH\uff08\u5b89\u5168\u5916\u58f3\u534f\u8bae\uff09\u8bbf\u95ee\u548c\u5199\u5165 GitHub.com \u4e0a\u7684\u5b58\u50a8\u5e93\u4e2d\u7684\u6570\u636e\u3002 \u901a\u8fc7 SSH \u8fdb\u884c\u8fde\u63a5\u65f6\uff0c\u4f7f\u7528\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u7684\u79c1\u94a5\u6587\u4ef6\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u5173\u4e8e SSH\u201d\u3002</p> <p>\u751f\u6210 SSH \u5bc6\u94a5\u65f6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5bc6\u7801\u4ee5\u8fdb\u4e00\u6b65\u4fdd\u62a4\u5bc6\u94a5\u3002 \u6bcf\u5f53\u4f7f\u7528\u5bc6\u94a5\u65f6\uff0c\u90fd\u5fc5\u987b\u8f93\u5165\u5bc6\u7801\u3002 \u5982\u679c\u5bc6\u94a5\u5177\u6709\u5bc6\u7801\u5e76\u4e14\u4f60\u4e0d\u60f3\u6bcf\u6b21\u4f7f\u7528\u5bc6\u94a5\u65f6\u90fd\u8f93\u5165\u5bc6\u7801\uff0c\u5219\u53ef\u4ee5\u5c06\u5bc6\u94a5\u6dfb\u52a0\u5230 SSH \u4ee3\u7406\u3002 SSH \u4ee3\u7406\u4f1a\u7ba1\u7406 SSH \u5bc6\u94a5\u5e76\u8bb0\u4f4f\u4f60\u7684\u5bc6\u7801\u3002</p> <p>\u5982\u679c\u60a8\u8fd8\u6ca1\u6709 SSH \u5bc6\u94a5\uff0c\u5219\u5fc5\u987b\u751f\u6210\u65b0 SSH \u5bc6\u94a5\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u3002 \u5982\u679c\u4e0d\u786e\u5b9a\u662f\u5426\u5df2\u7ecf\u62e5\u6709 SSH \u5bc6\u94a5\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u73b0\u6709\u5bc6\u94a5\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u68c0\u67e5\u73b0\u6709 SSH \u5bc6\u94a5\u201d\u3002</p> <p>\u5982\u679c\u8981\u4f7f\u7528\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u5411 GitHub \u9a8c\u8bc1\uff0c\u5219\u5fc5\u987b\u4e3a\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5\u3002 \u4f7f\u7528\u5bc6\u94a5\u5bf9\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u65f6\uff0c\u60a8\u5fc5\u987b\u5c06\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u00a0OpenSSH 8.2 \u53d1\u884c\u8bf4\u660e\u3002</p>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#ssh_2","title":"\u751f\u6210\u65b0 SSH \u5bc6\u94a5","text":"<p>\u53ef\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5\u3002 \u751f\u6210\u5bc6\u94a5\u540e\uff0c\u53ef\u4ee5\u5c06\u516c\u94a5\u6dfb\u52a0\u5230\u4f60\u5728 GitHub.com \u4e0a\u7684\u5e10\u6237\uff0c\u4ee5\u542f\u7528\u901a\u8fc7 SSH \u8fdb\u884c Git \u64cd\u4f5c\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002</p> <p>\u6ce8\u610f\uff1aGitHub \u901a\u8fc7\u5728 2022 \u5e74 3 \u6708 15 \u65e5\u5220\u9664\u65e7\u7684\u3001\u4e0d\u5b89\u5168\u7684\u5bc6\u94a5\u7c7b\u578b\u6765\u63d0\u9ad8\u5b89\u5168\u6027\u3002</p> <p>\u81ea\u8be5\u65e5\u671f\u8d77\uff0c\u4e0d\u518d\u652f\u6301 DSA \u5bc6\u94a5 (<code>ssh-dss</code>)\u3002 \u65e0\u6cd5\u5728 GitHub.com \u4e0a\u5411\u4e2a\u4eba\u5e10\u6237\u6dfb\u52a0\u65b0\u7684 DSA \u5bc6\u94a5\u3002</p> <p>2021 \u5e74 11 \u6708 2 \u65e5\u4e4b\u524d\u5e26\u6709\u00a0<code>valid_after</code>\u00a0\u7684 RSA \u5bc6\u94a5 (<code>ssh-rsa</code>) \u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u4efb\u4f55\u7b7e\u540d\u7b97\u6cd5\u3002 \u5728\u8be5\u65e5\u671f\u4e4b\u540e\u751f\u6210\u7684 RSA \u5bc6\u94a5\u5fc5\u987b\u4f7f\u7528 SHA-2 \u7b7e\u540d\u7b97\u6cd5\u3002 \u4e00\u4e9b\u8f83\u65e7\u7684\u5ba2\u6237\u7aef\u53ef\u80fd\u9700\u8981\u5347\u7ea7\u624d\u80fd\u4f7f\u7528 SHA-2 \u7b7e\u540d\u3002</p> <ol> <li>\u6253\u5f00 Git Bash\u3002</li> <li>\u7c98\u8d34\u4ee5\u4e0b\u6587\u672c\uff0c\u5c06\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7535\u5b50\u90ae\u4ef6\u66ff\u6362\u4e3a GitHub \u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002</li> </ol> <pre><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre> <p>\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u652f\u6301 Ed25519 \u7b97\u6cd5\u7684\u65e7\u7cfb\u7edf\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code> ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</code></pre> <p>\u8fd9\u5c06\u4ee5\u63d0\u4f9b\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4e3a\u6807\u7b7e\u521b\u5efa\u65b0 SSH \u5bc6\u94a5\u3002</p> <pre><code>&gt; Generating public/private ALGORITHM key pair.\n</code></pre> <p>\u5f53\u7cfb\u7edf\u63d0\u793a\u60a8\u201cEnter a file in which to save the key\uff08\u8f93\u5165\u8981\u4fdd\u5b58\u5bc6\u94a5\u7684\u6587\u4ef6\uff09\u201d\u65f6\uff0c\u53ef\u4ee5\u6309 Enter \u952e\u63a5\u53d7\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\u3002 \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u4ee5\u524d\u521b\u5efa\u4e86 SSH \u5bc6\u94a5\uff0c\u5219 ssh-keygen \u53ef\u80fd\u4f1a\u8981\u6c42\u91cd\u5199\u53e6\u4e00\u4e2a\u5bc6\u94a5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5efa\u8bae\u521b\u5efa\u81ea\u5b9a\u4e49\u547d\u540d\u7684 SSH \u5bc6\u94a5\u3002 \u4e3a\u6b64\uff0c\u8bf7\u952e\u5165\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\uff0c\u5e76\u5c06 id_ALGORITHM \u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u5bc6\u94a5\u540d\u79f0\u3002</p> <pre><code>&gt; Enter a file in which to save the key (/c/Users/YOU/.ssh/id_ALGORITHM):[Press enter]\n</code></pre> <ol> <li>\u5728\u63d0\u793a\u7b26\u4e0b\uff0c\u952e\u5165\u5b89\u5168\u5bc6\u7801\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u4f7f\u7528 SSH \u5bc6\u94a5\u5bc6\u7801\u201d\u3002</li> </ol> <pre><code>&gt; Enter passphrase (empty for no passphrase): [Type a passphrase]\n&gt; Enter same passphrase again: [Type passphrase again]\n</code></pre>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#ssh-ssh-agent_1","title":"\u5c06 SSH \u5bc6\u94a5\u6dfb\u52a0\u5230 ssh-agent","text":"<p>\u5728\u5411 ssh \u4ee3\u7406\u6dfb\u52a0\u65b0\u7684 SSH \u5bc6\u94a5\u4ee5\u7ba1\u7406\u60a8\u7684\u5bc6\u94a5\u4e4b\u524d\uff0c\u60a8\u5e94\u8be5\u68c0\u67e5\u73b0\u6709 SSH \u5bc6\u94a5\u5e76\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5\u3002</p> <p>\u5982\u679c\u5df2\u5b89\u88c5\u00a0GitHub Desktop\uff0c\u53ef\u4f7f\u7528\u5b83\u514b\u9686\u5b58\u50a8\u5e93\uff0c\u800c\u65e0\u9700\u5904\u7406 SSH \u5bc6\u94a5\u3002</p> <ol> <li>\u5728\u65b0\u7684 _ \u7ba1\u7406\u5458\u63d0\u5347 _ \u7ec8\u7aef\u7a97\u53e3\uff08PowerShell \u6216 CMD\uff09\u4e2d\uff0c\u786e\u4fdd ssh-agent \u6b63\u5728\u8fd0\u884c\u3002 \u53ef\u4ee5\u4f7f\u7528\u201c\u4f7f\u7528 SSH \u5bc6\u94a5\u5bc6\u7801\u201d\u4e2d\u7684\u201c\u81ea\u52a8\u542f\u52a8 ssh agent\u201d\u8bf4\u660e\uff0c\u6216\u8005\u624b\u52a8\u542f\u52a8\u5b83\uff1a</li> </ol> <pre><code># start the ssh-agent in the background\nGet-Service -Name ssh-agent | Set-Service -StartupType Manual\nStart-Service ssh-agent\n</code></pre> <ol> <li>\u5728\u65e0\u63d0\u5347\u6743\u9650\u7684\u7ec8\u7aef\u7a97\u53e3\u4e2d\uff0c\u5c06 SSH \u79c1\u94a5\u6dfb\u52a0\u5230 ssh-agent\u3002 \u5982\u679c\u4f7f\u7528\u5176\u4ed6\u540d\u79f0\u521b\u5efa\u4e86\u5bc6\u94a5\u6216\u8981\u6dfb\u52a0\u5177\u6709\u5176\u4ed6\u540d\u79f0\u7684\u73b0\u6709\u5bc6\u94a5\uff0c\u8bf7\u5c06\u547d\u4ee4\u4e2d\u7684 ided25519 \u66ff\u6362\u4e3a\u79c1\u94a5\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> </ol> <pre><code>ssh-add /c/Users/YOU/.ssh/id_ed25519\n</code></pre> <ol> <li>\u5c06 SSH \u516c\u94a5\u6dfb\u52a0\u5230 GitHub \u4e0a\u7684\u5e10\u6237\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u65b0\u589e SSH \u5bc6\u94a5\u5230 GitHub \u5e10\u6237\u201d\u3002</li> </ol>"},{"location":"Learning/CS/VCS/github/SSH_keypair_setup_for_GitHub/#ssh_3","title":"\u4e3a\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5","text":"<p>\u5982\u679c\u60a8\u4f7f\u7528 macOS \u6216 Linux\uff0c \u5728\u751f\u6210\u65b0\u7684 SSH \u5bc6\u94a5\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u66f4\u65b0 SSH \u5ba2\u6237\u7aef\u6216\u5b89\u88c5\u65b0\u7684 SSH \u5ba2\u6237\u7aef\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u9519\u8bef\uff1a\u672a\u77e5\u5bc6\u94a5\u7c7b\u578b\u201d\u3002</p> <ol> <li>\u5c06\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u63d2\u5165\u8ba1\u7b97\u673a\u3002</li> <li>\u6253\u5f00 Git Bash\u3002</li> <li>\u7c98\u8d34\u4ee5\u4e0b\u6587\u672c\uff0c\u5c06\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7535\u5b50\u90ae\u4ef6\u66ff\u6362\u4e3a\u4e0e GitHub \u4e2d\u5e10\u6237\u5173\u8054\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002</li> </ol> <pre><code>ssh-keygen -t ed25519-sk -C \"your_email@example.com\"\n</code></pre> <p>\u6ce8\u610f\uff1a\u5982\u679c\u547d\u4ee4\u5931\u8d25\uff0c\u5e76\u4e14\u4f60\u6536\u5230\u9519\u8bef\u00a0<code>invalid format</code>\u00a0\u6216\u00a0<code>feature not supported,</code>\uff0c\u5219\u8868\u660e\u4f60\u53ef\u80fd\u5728\u4f7f\u7528\u4e0d\u652f\u6301 Ed25519 \u7b97\u6cd5\u7684\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u3002 \u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u3002</p> <pre><code> ssh-keygen -t ecdsa-sk -C \"your_email@example.com\"\n</code></pre> <ol> <li>\u51fa\u73b0\u63d0\u793a\u65f6\uff0c\u8bf7\u89e6\u6478\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u4e0a\u7684\u6309\u94ae\u3002</li> <li>\u5f53\u63d0\u793a\u60a8\u201cEnter a file in which to save the key\uff08\u8f93\u5165\u8981\u4fdd\u5b58\u5bc6\u94a5\u7684\u6587\u4ef6\uff09\u201d\u65f6\uff0c\u6309 Enter \u63a5\u53d7\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\u3002</li> </ol> <pre><code>&gt; Enter a file in which to save the key (/c/Users/YOU/.ssh/id_ed25519_sk):[Press enter]\n</code></pre> <ol> <li>\u5f53\u63d0\u793a\u4f60\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u8bf7\u6309 Enter\u3002</li> </ol> <pre><code>&gt; Enter passphrase (empty for no passphrase): [Type a passphrase]\n&gt; Enter same passphrase again: [Type passphrase again]\n</code></pre> <ol> <li>\u5c06 SSH \u516c\u94a5\u6dfb\u52a0\u5230 GitHub \u4e0a\u7684\u5e10\u6237\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u65b0\u589e SSH \u5bc6\u94a5\u5230 GitHub \u5e10\u6237\u201d</li> </ol>"},{"location":"Learning/CS/tools/git-install-instruction/","title":"Git-install-instruction","text":"<p>note: \u8f6c\u81ea \u77e5\u4e4e \u52a0\u4e86\u4e00\u70b9\u6ce8\u91ca\uff0c\u4f7f\u7528\u659c\u4f53 </p> <p>\u6839\u636e\u81ea\u5df1\u7535\u8111\u7cfb\u7edf\u4e0b\u8f7d\u76f8\u5e94\u7684\u5b89\u88c5\u5305 \u73b0\u5728\u7535\u8111\u4e00\u822c\u662f 64 \u4f4d\u7684</p>"},{"location":"Learning/CS/tools/git-install-instruction/#1","title":"1\uff09\u8bb8\u53ef\u7533\u660e","text":"<p>\u70b9\u51fb \u201cNext\u201d \u5373\u53ef\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#2","title":"2\uff09\u9009\u62e9\u5b89\u88c5\u8def\u5f84","text":"<p>\u6839\u636e\u81ea\u5df1\u9700\u8981\u4fee\u6539\u5b89\u88c5\u4f4d\u7f6e\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#3","title":"3\uff09\u9009\u62e9\u5b89\u88c5\u7ec4\u4ef6","text":"<p>a) \u9ed8\u8ba4\u52fe\u9009\u7684\u9009\u9879\uff0c\u5efa\u8bae\u4e0d\u8981\u52a8\u3002\u9ed8\u8ba4\u5b89\u88c5\u4e86\u4e00\u4e9b\u7ec4\u4ef6 Git Bash ,Git GUI \u4ee5\u53ca Git LFS \u8fd8\u6709\u684c\u9762\u5feb\u6377\u65b9\u5f0f\u4ee5\u53ca\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u7684\u6587\u672c\u7f16\u8f91\uff0c\u4f7f\u7528 sh \u811a\u672c\u542f\u52a8 git bash.</p> <p>b) \u7ea2\u8272\u6846\u6846\u51b3\u5b9a\u5728\u6240\u6709\u63a7\u5236\u53f0\u7a97\u53e3\u4e2d\u4f7f\u7528 TrueType \u5b57\u4f53\u548c\u662f\u5426\u6bcf\u5929\u68c0\u67e5 Git \u662f\u5426\u6709 Windows \u66f4\u65b0\uff0c\u6309\u9700\u52fe\u9009\u3002</p> <p>\u6ce8\uff1aGit LFS \u7528\u4e8e\u5b9e\u73b0 Git \u5bf9\u5927\u6587\u4ef6\u7684\u652f\u6301 \uff0cLFS \u7b56\u7565\u53ef\u4ee5\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\u548c\u63d0\u9ad8\u6027\u80fd\uff0c\u6bd4\u5982\u6e38\u620f\u5f00\u53d1\u4e2d\u8bbe\u8ba1\u8d44\u6e90\u6587\u4ef6\u5360\u7528\u5f88\u5927\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#4","title":"4\uff09\u9009\u62e9\u5f00\u59cb\u83dc\u5355\u76ee\u5f55","text":"<p>\u9ed8\u8ba4 git \u5373\u53ef \u76f4\u63a5 next\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#5-git","title":"5\uff09\u9009\u62e9 Git \u6587\u4ef6\u9ed8\u8ba4\u7684\u7f16\u8f91\u5668","text":"<p>\u5f88\u5c11\u7528\u5230\uff0c\u6240\u4ee5\u9ed8\u8ba4 Vim \u5373\u53ef\uff0c\u76f4\u63a5\u70b9\u201cNext\u201d\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#6-git","title":"6\uff09\u9009\u62e9 Git \u521d\u59cb\u5316\u5206\u652f\u7684\u540d\u79f0","text":"<p>a) git \u9ed8\u8ba4\u7684\u521d\u59cb\u5316\u5206\u652f\u540d\u79f0\u4e3a \"master\"\u3002</p> <p>b) \u6839\u636e\u81ea\u5df1\u9879\u76ee\u4e1a\u52a1\u91cd\u65b0\u547d\u540d \u5982\uff1amain,trunk \u6216\u8005\u81ea\u5df1\u586b\u5199\u3002</p> <p>\u6ce8\uff1a\u5df2\u7ecf\u5b58\u5728\u7684\u9879\u76ee\u4e0d\u53d7\u5f71\u54cd\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#7-git","title":"7\uff09\u9009\u62e9\u4f7f\u7528 Git \u7684\u65b9\u5f0f","text":"<p>a) \u7b2c\u4e00\u4e2a\u9009\u9879, \u53ea\u4ece Git Bash \u547d\u4ee4\u884c\u5de5\u5177 \u4f7f\u7528 Git\uff0c\u4e5f\u662f\u6700\u8c28\u614e\u7684\u9ed8\u8ba4\u7684\u9009\u62e9\u3002</p> <p>b) \u7b2c\u4e8c\u4e2a\u9009\u9879, \u4ece\u547d\u4ee4\u884c\u6216\u8005\u7b2c\u4e09\u65b9\u8f6f\u4ef6 \u4f7f\u7528 Git\u3002 \u80af\u5b9a\u9009\u7b2c\u4e8c\u4e2a\uff0c\u4ee5\u540e\u4f1a\u9047\u5230 win+r \u6253\u5f00 cmd(\u547d\u4ee4\u884c\u5de5\u5177)\uff0cpowershell(win \u52a0\u5f3a\u7248 cmd) \u4f7f\u7528 git \u547d\u4ee4\uff0c\u800c\u4e14\u4e5f\u4f1a\u4e0e pycharm \u8fd9\u79cd IDE(\u96c6\u6210\u5f00\u53d1\u73af\u5883\u7ed3\u5408\u5728\u4e00\u8d77) c) \u7b2c\u4e09\u4e2a\u9009\u9879\uff0c\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u4f7f\u7528 Git \u548c\u53ef\u9009\u7684 Unix \u5de5\u5177\u3002</p> <p>\u6ce8\uff1a\u8fd9\u4e09\u4e2a\u9009\u9879 \u6211\u4e5f\u6709\u70b9\u8ff7 \u4e0d\u77e5\u4ec0\u4e48\u573a\u666f\u4f1a\u7528\u5230\uff0c\u6709\u5565\u7528\uff0c\u5e0c\u671b\u6709\u77e5\u9053\u7684\u5927\u795e\u56de\u590d\u544a\u77e5\u4e0b\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#8-https","title":"8\uff09\u9009\u62e9 Https \u4f20\u8f93\u540e\u7aef","text":"<p>\u8ba9 Git \u4f7f\u7528\u54ea\u4e2a SSL/TLs \u5e93\u6765\u8fdb\u884c HTTPS \u8fde\u63a5?</p> <p>a) \u7b2c\u4e00\u4e2a\u9009\u9879\uff0c\u4f7f\u7528 OpenSSL \u5e93\uff0c\u670d\u52a1\u5668 cer \u8bc1\u4e66\u5c06\u4f7f\u7528 ca \u5305\u4e2d.crtw \u6587\u4ef6\u8fdb\u884c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u9ed8\u8ba4\u9009\u8fd9\u4e2a\u3002</p> <p>b) \u7b2c\u4e8c\u4e2a\u9009\u9879\uff0c\u4f7f\u7528\u672c\u673a Windows \u5b89\u5168\u901a\u9053\u5e93\uff0c\u670d\u52a1\u5668\u8bc1\u4e66\u5c06\u5728 Windows \u8bc1\u4e66\u5b58\u50a8\u4e2d\u8fdb\u884c\u9a8c\u8bc1\u3002\u8fd9\u4e2a\u9009\u9879\u8fd8\u5141\u8bb8\u60a8\u901a\u8fc7 Active Directory \u57df\u670d\u52a1\u4f7f\u7528\u60a8\u7684\u516c\u53f8\u5185\u90e8\u6839 CA \u8bc1\u4e66\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#9","title":"9\uff09\u914d\u7f6e\u7ed3\u675f\u884c\u8f6c\u6362\u65b9\u5f0f","text":"<p>Git \u5e94\u8be5\u5982\u4f55\u5904\u7406\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u884c\u7ed3\u5c3e?</p> <p>a) \u7b2c\u4e00\u4e2a\u9009\u9879\uff0c\u4e0b\u62c9\u662f\u8f6c\u6362 Windows \u98ce\u683c\uff0c\u63d0\u4ea4\u8f6c\u6362\u4e3a iunix \u98ce\u683c\uff0c\u5728 windows \u8fd9\u662f\u63a8\u8350\u9ed8\u8ba4\u7684\u8bbe\u7f6e\u3002</p> <p>b) \u7b2c\u4e8c\u4e2a\u9009\u9879\uff0c\u4e0b\u62c9\u65f6\u4e0d\u6539\u53d8\uff0c\u63d0\u4ea4\u8f6c\u6362\u4e3a iunix \u98ce\u683c\u3002\u5bf9\u4e8e\u8de8\u5e73\u53f0\u9879\u76ee\uff0c\u8fd9\u662f Unix \u4e0a\u7684\u63a8\u8350\u8bbe\u7f6e\u3002</p> <p>c) \u6700\u540e\u4e00\u4e2a\u9009\u9879\uff0c\u4e0b\u62c9\u548c\u63d0\u4ea4\u90fd\u4e0d\u8fdb\u884c\u4efb\u4f55\u8f6c\u6362\uff0c\u5bf9\u4e8e\u8de8\u5e73\u53f0\u9879\u76ee (\u201c\u6838\u5fc3\u9879\u76ee\u201d)\uff0c\u4e0d\u63a8\u8350\u9009\u62e9\u6b64\u9009\u9879\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#10-git-bash","title":"10\uff09\u914d\u7f6e\u7ec8\u7aef\u6a21\u62df\u5668\u4e3a\u4f7f\u7528 Git Bash","text":"<p>a) \u7b2c\u4e00\u4e2a\u9009\u9879\uff0cGit Biash \u5c06\u4f7f\u7528 MinTTY \u4f5c\u4e3a\u7ec8\u7aef\u6a21\u62df\u5668\uff0c\u5b83\u62e5\u6709\u4e00\u4e2a\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u7a97\u53e3\uff0c\u975e\u77e9\u5f62\u7684\u9009\u62e9\u548c Unicode \u5b57\u4f53\u3002Windows \u63a7\u5236\u53f0\u7a0b\u5e8f (\u5982\u4ea4\u4e92\u5f0f Python) \u5fc5\u987b\u901a\u8fc7 winpty\u2019\u542f\u52a8\u624d\u80fd\u5728 MinTTY \u4e2d\u5de5\u4f5c\uff0c\u9ed8\u8ba4\u9009\u62e9\u8fd9\u4e2a\u66f4\u7075\u6d3b\u3002</p> <p>b) \u7b2c\u4e8c\u4e2a\u9009\u9879\uff0c\u4f7f\u7528 Windows \u7684\u9ed8\u8ba4\u63a7\u5236\u53f0\uff08cmd.exe\uff09,\u5b83\u53ef\u4ee5\u5728 Win32 \u63a7\u5236\u53f0\u7a0b\u5e8f\u4e2d\u5de5\u4f5c\uff0c\u5982\u4ea4\u4e92\u5f0f Python \u6216 node\u3002is\uff0c\u4f46\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u9650\u7684\u9ed8\u8ba4\u6eda\u52a8\u56de\u6eda\uff0c\u9700\u8981\u914d\u7f6e\u4e3a\u4f7f\u7528 Unicode \u5b57\u4f53\uff0c\u4ee5\u4fbf\u6b63\u786e\u663e\u793a\u975e ascil \u5b57\u7b26\uff0c\u5728 Windows 10 \u4e4b\u524d\uff0c\u5b83\u7684\u7a97\u53e3\u4e0d\u80fd\u81ea\u7531\u8c03\u6574\u5927\u5c0f\uff0c\u5b83\u53ea\u5141\u8bb8\u77e9\u5f62\u6587\u672c\u9009\u62e9</p>"},{"location":"Learning/CS/tools/git-install-instruction/#11-git","title":"11\uff09\u9009\u62e9 Git \u4e0b\u62c9\u9ed8\u8ba4\u884c\u4e3a","text":"<p>a) \u7b2c\u4e00\u4e2a\u9009\u9879\uff0c\u9ed8\u8ba4 (\u5feb\u8fdb\u6216\u5408\u5e76)\u3002\u8fd9\u662f\u201cgit pull\u201d\u7684\u6807\u51c6\u884c\u4e3a: \u5c3d\u53ef\u80fd\u5feb\u8fdb\u5f53\u524d\u5206\u652f\u5230\u4e00\u4e2a\u88ab\u6355\u83b7\u7684\u5206\u652f\uff0c\u5426\u5219\u521b\u5efa\u5408\u5e76\u63d0\u4ea4\u3002</p> <p>b) \u7b2c\u4e8c\u4e2a\u9009\u9879\uff0c\u5c06\u5f53\u524d\u5206\u652f\u6539\u4e3a\u83b7\u53d6\u7684\u5206\u652f\u3002\u5982\u679c\u6ca1\u6709\u8981\u91cd\u57fa\u7684\u672c\u5730\u63d0\u4ea4\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5feb\u8fdb\u3002</p> <p>c) \u7b2c\u4e09\u4e2a\u9009\u9879\uff0c\u4ec5\u4ec5\u5feb\u8fdb\uff0c \u5feb\u8fdb\u5230\u83b7\u53d6\u7684\u5206\u652f\u3002\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u5c31\u5931\u8d25\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#12-git","title":"12\uff09\u9009\u62e9 Git \u51ed\u8bc1\u5c0f\u52a9\u624b","text":"<p>Credential helper \u662f\u5e2e\u6211\u4eec\u4fdd\u5b58\u51ed\u8bc1\uff08\u7528\u6237\u5bc6\u7801\uff09\u4ed6\u6709\u5f88\u591a\u5b58\u50a8\u6a21\u5f0f\u5982\uff1acache\uff0cstore\uff0cmanager \u548c osxkeychain\uff0c\u9ed8\u8ba4 wincred\uff0c\u8fd9\u91cc\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#13","title":"13\uff09\u914d\u7f6e\u989d\u5916\u7279\u6027\u9009\u9879","text":"<p>a) \u7b2c\u4e00\u4e2a\u9009\u9879\uff0c\u542f\u7528\u6587\u4ef6\u7cfb\u7edf\u7f13\u5b58,\u6587\u4ef6\u7cfb\u7edf\u6570\u636e\u5c06\u88ab\u5927\u91cf\u8bfb\u53d6\uff0c\u5e76\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\u4ee5\u7528\u4e8e\u67d0\u4e9b\u64cd\u4f5c (\u201ccore\u3002fscache\" \u8bbe\u7f6e\u4e3a \"true\")\u3002\u8fd9\u63d0\u4f9b\u4e86\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\u3002</p> <p>b) \u7b2c\u4e8c\u4e2a\u9009\u9879\uff0c\u652f\u6301\u7b26\u53f7\u94fe\u63a5\uff0c\u542f\u7528\u7b26\u53f7\u94fe\u63a5 (\u9700\u8981 SeCreateSymboliclink \u6743\u9650)\u3002\u8bf7\u6ce8\u610f\uff0c\u73b0\u6709\u5b58\u50a8\u5e93\u4e0d\u53d7\u6b64\u8bbe\u7f6e\u7684\u5f71\u54cd\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#14","title":"14\uff09\u542f\u7528\u5b9e\u9a8c\u914d\u7f6e\u9009\u9879","text":"<p>\u542f\u7528\u5bf9\u4f2a\u63a7\u5236\u53f0\u7684\u5b9e\u9a8c\u6027\u652f\u6301,(\u65b0) \u8fd9\u5141\u8bb8\u5728 Git Bash \u7a97\u53e3\u4e2d\u8fd0\u884c\u539f\u751f\u63a7\u5236\u53f0\u7a0b\u5e8f\uff0c\u5982 Node \u6216 Python\uff0c\u800c\u4e0d\u4f7f\u7528 winpty\uff0c\u4f46\u5b83\u4ecd\u7136\u6709\u5df2\u77e5\u7684 bug,\u4e00\u822c\u7528\u4e0d\u5230 \u53ef\u4e0d\u52fe\u9009</p> <p>\u70b9\u51fb Install \u5373\u53ef\u5b89\u88c5\u5b8c\u6bd5\u3002</p>"},{"location":"Learning/CS/tools/git-install-instruction/#15","title":"15\uff09\u5b89\u88c5\u5b8c\u6210","text":"<p>Git \u7684\u5b89\u88c5\u5b8c\u6210\uff0c\u53ef\u4ee5\u5728\u5f00\u59cb\u83dc\u5355\u4e2d\u770b\u5230 Git \u7684\u4e09\u4e2a\u542f\u52a8\u56fe\u6807\uff08Git Bash\u3001Git CMD(Deprecated)\u3001Git GUI\uff09\u3002 Deprecated \u662f\u4e0d\u5728\u7ef4\u62a4\uff0c\u6216\u8005\u5feb\u8981\u5e9f\u5f03\u6389\u4e86 Git GUI\uff0c\u662f Git \u7684\u53ef\u89c6\u5316\u64cd\u4f5c\u5de5\u5177\uff0c\u70b9\u51fb\u6253\u5f00\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>Git Bash\uff0c\u662f Git \u914d\u5957\u7684\u4e00\u4e2a\u63a7\u5236\u53f0\uff0c\u70b9\u51fb\u6253\u5f00\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>Git CMD(Deprecated)\uff0c\u662f\u901a\u8fc7 CMD \u4f7f\u7528 Git\uff08\u4e0d\u63a8\u8350\u4f7f\u7528\uff09\uff0c\u70b9\u51fb\u6253\u5f00\u5982\u4e0b\u56fe</p> <p></p> <p>\u8fd9\u51e0\u4e2a\u6211\u90fd\u4e0d\u7528\ud83d\ude02\ud83d\ude02\ud83d\ude02\uff0cpycharm \u914d\u7f6e git\uff0c\u4f1a\u6709\u56fe\u5f62\u5316\u754c\u9762\u65b9\u4fbf\u64cd\u4f5c\uff0c\u514b\u9686\u9879\u76ee\u4e00\u822c\u4e5f\u90fd\u662f\u5728 pycharm \u91cc\u9762\u8f93\u5165\u94fe\u63a5\u76f4\u63a5\u514b\u9686\uff0c\u5b9e\u9645\u4e0a\u73b0\u4ee3\u7684\u5f00\u53d1\u73af\u5883\u5de5\u5177\u51e0\u4e4e\u90fd\u5185\u7f6e\u7ed3\u5408\u64cd\u4f5c git \u7684\u754c\u9762\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u547d\u4ee4\u884c\uff0c\u4f46\u547d\u4ee4\u884c\u4e5f\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u7684\uff0c\u4e00\u4e9b\u7ec6\u81f4\u7684\u914d\u7f6e\u6bd4\u5982\u4ee3\u7406\uff08\u548c\u8fde\u63a5\u5916\u7f51\u6709\u5173\uff09\u7684\u914d\u7f6e\uff0c\u4ecd\u7136\u9700\u8981\u547d\u4ee4\u884c</p> <p>\u5728\u7ec8\u7aef clone \u4ed3\u5e93\u65f6\uff0c\u82e5\u51fa\u73b0 don't connect\uff0c\u5219\u9700\u8981\u914d\u7f6e\u7aef\u53e3\u4fe1\u606f\u3002 \u4f8b\u5982\u4f60\u4f7f\u7528\u7684\u662f Clash\uff0c\u5219\u7aef\u53e3\u53c2\u6570\u9ed8\u8ba4\u4e3a 7890.</p>"},{"location":"Learning/CS/tools/IDE/JetBrains/","title":"JetBrains","text":""},{"location":"Learning/CS/tools/IDE/JetBrains/#_1","title":"\u6fc0\u6d3b\u5de5\u5177","text":"<ul> <li>\u4e0b\u8f7d\u5730\u5740     https://wwkh.lanzout.com/b03jufqhg     \u5bc6\u7801:7bou</li> </ul> <pre><code>chmod +x scripts/install.sh\n./scripts/install.sh\n</code></pre> <ul> <li>win \u7cfb\u7edf\u51fa\u73b0\u201cKey is invalid\u201d\u89e3\u51b3\u65b9\u6cd5,Linux \u7cfb\u7edf\u6309\u6559\u7a0b\u6b65\u9aa4\u627e Linux \u6587\u4ef6\u5939\u91cc\u6587\u4ef6     \u51fa\u73b0\u201cKey is invalid\u201d\u89e3\u51b3\u65b9\u6cd5 - Feishu Docs</li> </ul>"},{"location":"Learning/CS/tools/IDE/JetBrains/#_2","title":"\u65ad\u7f51\u6fc0\u6d3b","text":"<p>\u6b63\u7248\u6fc0\u6d3b\u7801\uff1a https://hwmgu1yf37x.feishu.cn/docx/Y0PGdrvC2orriUxrFBxcavPxnqH</p> <p></p> <pre><code>KQ8KMJ77TY-eyJsaWNlbnNlSWQiOiJLUThLTUo3N1RZIiwibGljZW5zZWVOYW1lIjoiVW5pdmVyc2l0YXMgTmVnZXJpIE1hbGFuZyIsImxpY2Vuc2VlVHlwZSI6IkNMQVNTUk9PTSIsImFzc2lnbmVlTmFtZSI6IkpldOWFqOWutuahtiDorqTlh4blupflkI0iLCJhc3NpZ25lZUVtYWlsIjoibmtucWFyY214a0AxNjMuY29tIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTViIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJTIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIzMTIwOUxQQUEwMDEwMDkiLCJoYXNoIjoiNTI1MDgyODgvMjUxMjMyNjE6LTE1MDQzMDI5NDAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwidHJpYWwiOmZhbHNlLCJhaUFsbG93ZWQiOnRydWV9-QKJUeHFkc+NaPWlEFZFGpoBJBYjehR5cGPezKK9BKHVnVaydzLV4YSAnILt8mz9twXw9lIh0k/HivsPKrffP8F9gZkWA/rfjieSI0jziDr9WBARPzYKRlQHSw/iZn5VUn6zIR9U7uJC6Kd/jiaeLumn+dzL/ia9B/1dBUIg5WQlIOtld4xx2xR0gb4JCNBd4kQMV4SAC3Og13/APGkDiP7KzDz7T3DxmpSKvjAfG1Hg1jn2pt5B/3gmhOK5lmJKbGBDRW40f4sqyDpzXsA5DaPAAaFT07GSL5FlfdKfngGjcQdwQ18k1iFET6wSwWkk+p+OySDqegpFw3wx2Kzj+Ow==-MIIETDCCAjSgAwIBAgIBDzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIyMTAxMDE2MDU0NFoXDTI0MTAxMTE2MDU0NFowHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMjEwMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/W3uCpU5M2y48rUR/3fFR6y4xj1nOm3rIuGp2brELVGzdgK2BezjnDXpAxVDw5657hBkAUMoyByiDs2MgmVi9IcqdAwpk988/Daaajq9xuU1of59jH9eQ9c3BmsEtdA4boN3VpenYKATwmpKYkJKVc07ZKoXL6kSyZuF7Jq7HoQZcclChbF75QJPGbri3cw9vDk/e46kuzfwpGftvl6+vKibpInO6Dv0ocwImDbOutyZC7E+BwpEm1TJZW4XovMBegHhWC04cJvpH1u98xoR94ichw0jKhdppywARe43rGU96163RckIuFmFDQKZV9SMUrwpQFu4Z2D5yTNqnlLRfAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQU5FZqQ4gnVc+inIeZF+o3ID+VhcEwSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBANLG1anEKid4W87vQkqWaQTkRtFKJ2GFtBeMhvLhIyM6Cg3FdQnMZr0qr9mlV0w289pf/+M14J7S7SgsfwxMJvFbw9gZlwHvhBl24N349GuthshGO9P9eKmNPgyTJzTtw6FedXrrHV99nC7spaY84e+DqfHGYOzMJDrg8xHDYLLHk5Q2z5TlrztXMbtLhjPKrc2+ZajFFshgE5eowfkutSYxeX8uA5czFNT1ZxmDwX1KIelbqhh6XkMQFJui8v8Eo396/sN3RAQSfvBd7Syhch2vlaMP4FAB11AlMKO2x/1hoKiHBU3oU3OKRTfoUTfy1uH3T+t03k1Qkr0dqgHLxiv6QU5WrarR9tx/dapqbsSmrYapmJ7S5+ghc4FTWxXJB1cjJRh3X+gwJIHjOVW+5ZVqXTG2s2Jwi2daDt6XYeigxgL2SlQpeL5kvXNCcuSJurJVcRZFYUkzVv85XfDauqGxYqaehPcK2TzmcXOUWPfxQxLJd2TrqSiO+mseqqkNTb3ZDiYS/ZqdQoGYIUwJqXo+EDgqlmuWUhkWwCkyo4rtTZeAj+nP00v3n8JmXtO30Fip+lxpfsVR3tO1hk4Vi2kmVjXyRkW2G7D7WAVt+91ahFoSeRWlKyb4KcvGvwUaa43fWLem2hyI4di2pZdr3fcYJ3xvL5ejL3m14bKsfoOv\n</code></pre> <p>Code completion | PyCharm Documentation</p>"},{"location":"Learning/CS/tools/IDE/plugin/","title":"Plugin","text":""},{"location":"Learning/CS/tools/IDE/plugin/#2024-04-20","title":"2024-04-20","text":"<p>\u5361\u53f7: \u666e\u901a\u7248 -30 \u5929\u6709\u6548\u671f\uff08\u6388\u6743 2\uff09\uff1a</p> <pre><code>6EE636C2-FB194B14-9CBC5721-DB9F2D69\n</code></pre> <p>\u4f7f\u7528\u8fdc\u7a0b\u6388\u6743\u6559\u7a0b\u5730\u5740: https://r0r1ycuqywv.feishu.cn/docx/UvMrdZFfLoaDdvxzuXec0TIxnKf?from=from_copylink - Linux     Release copilot_activator_linux \u00b7 SupaVision/DocHub \u00b7 GitHub</p>"}]}